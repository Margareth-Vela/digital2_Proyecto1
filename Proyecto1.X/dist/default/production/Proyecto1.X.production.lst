

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Aug 22 17:56:40 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0013                     _SSPBUF	set	19
   373  0014                     _SSPCON	set	20
   374  0009                     _PORTE	set	9
   375  0008                     _PORTD	set	8
   376  0007                     _PORTC	set	7
   377  0006                     _PORTB	set	6
   378  0005                     _PORTA	set	5
   379  000B                     _INTCONbits	set	11
   380  0063                     _SSPIF	set	99
   381  005E                     _PEIE	set	94
   382  005F                     _GIE	set	95
   383  0049                     _RE1	set	73
   384  0048                     _RE0	set	72
   385  0091                     _SSPCON2bits	set	145
   386  0087                     _TRISCbits	set	135
   387  0094                     _SSPSTAT	set	148
   388  0093                     _SSPADD	set	147
   389  0091                     _SSPCON2	set	145
   390  0089                     _TRISE	set	137
   391  0088                     _TRISD	set	136
   392  0087                     _TRISC	set	135
   393  0086                     _TRISB	set	134
   394  0085                     _TRISA	set	133
   395  008F                     _OSCCONbits	set	143
   396  0463                     _SSPIE	set	1123
   397  043C                     _TRISC4	set	1084
   398  043B                     _TRISC3	set	1083
   399  0188                     _ANSEL	set	392
   400  0189                     _ANSELH	set	393
   401                           
   402                           	psect	strings
   403  028D                     __pstrings:
   404  028D                     stringtab:
   405  028D                     __stringtab:
   406  028D                     stringcode:	
   407                           ;	String table - string pointers are 1 byte each
   408                           
   409  028D                     stringdir:
   410  028D  3002               	movlw	high stringdir
   411  028E  008A               	movwf	10
   412  028F  0804               	movf	4,w
   413  0290  0A84               	incf	4,f
   414  0291  0782               	addwf	2,f
   415  0292                     __stringbase:
   416  0292  3400               	retlw	0
   417  0293                     __end_of__stringtab:
   418  0293                     STR_1:
   419  0293  3453               	retlw	83	;'S'
   420  0294  3431               	retlw	49	;'1'
   421  0295  343A               	retlw	58	;':'
   422  0296  3400               	retlw	0
   423  0297                     STR_3:
   424  0297  3453               	retlw	83	;'S'
   425  0298  3432               	retlw	50	;'2'
   426  0299  343A               	retlw	58	;':'
   427  029A  3400               	retlw	0
   428  029B                     STR_2:
   429  029B  3420               	retlw	32	;' '
   430  029C  3420               	retlw	32	;' '
   431  029D  3400               	retlw	0
   432  029B                     
   433                           	psect	cinit
   434  000F                     start_initialization:	
   435                           ; #config settings
   436                           
   437  000F                     __initialization:
   438                           
   439                           ; Clear objects allocated to COMMON
   440  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   441  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   442  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   443  0012                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446  0012                     __end_of__initialization:
   447  0012  0183               	clrf	3
   448  0013  120A  118A  2816   	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	bssCOMMON
   451  0079                     __pbssCOMMON:
   452  0079                     _Tercer_digito:
   453  0079                     	ds	1
   454  007A                     _Segundo_digito:
   455  007A                     	ds	1
   456  007B                     _Primer_digito:
   457  007B                     	ds	1
   458                           
   459                           	psect	cstackCOMMON
   460  0070                     __pcstackCOMMON:
   461  0070                     ?_setup:
   462  0070                     ?_Lcd_Init:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_Lcd_Clear:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_Lcd_Write_String:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_Decimal:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_Lcd_Write_Char:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_main:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_isr:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ??_isr:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_Lcd_Port:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_Lcd_Cmd:	
   490                           ; 1 bytes @ 0x0
   491                           
   492                           
   493                           ; 1 bytes @ 0x0
   494  0070                     	ds	2
   495  0072                     ??_setup:
   496  0072                     ??_Lcd_Port:	
   497                           ; 1 bytes @ 0x2
   498                           
   499  0072                     ?___bmul:	
   500                           ; 1 bytes @ 0x2
   501                           
   502  0072                     ?___awdiv:	
   503                           ; 1 bytes @ 0x2
   504                           
   505  0072                     Lcd_Port@a:	
   506                           ; 2 bytes @ 0x2
   507                           
   508  0072                     ___bmul@multiplicand:	
   509                           ; 1 bytes @ 0x2
   510                           
   511  0072                     ___awdiv@divisor:	
   512                           ; 1 bytes @ 0x2
   513                           
   514                           
   515                           ; 2 bytes @ 0x2
   516  0072                     	ds	1
   517  0073                     ??_Lcd_Write_Char:
   518  0073                     ??_Lcd_Cmd:	
   519                           ; 1 bytes @ 0x3
   520                           
   521  0073                     ??___bmul:	
   522                           ; 1 bytes @ 0x3
   523                           
   524                           
   525                           ; 1 bytes @ 0x3
   526  0073                     	ds	1
   527  0074                     Lcd_Write_Char@a:
   528  0074                     ___bmul@product:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     ___awdiv@dividend:	
   532                           ; 1 bytes @ 0x4
   533                           
   534                           
   535                           ; 2 bytes @ 0x4
   536  0074                     	ds	1
   537  0075                     Lcd_Cmd@a:
   538  0075                     Lcd_Write_Char@temp:	
   539                           ; 1 bytes @ 0x5
   540                           
   541  0075                     ___bmul@multiplier:	
   542                           ; 1 bytes @ 0x5
   543                           
   544                           
   545                           ; 1 bytes @ 0x5
   546  0075                     	ds	1
   547  0076                     ??_Lcd_Init:
   548  0076                     ??_Lcd_Clear:	
   549                           ; 1 bytes @ 0x6
   550                           
   551  0076                     ?_Lcd_Set_Cursor:	
   552                           ; 1 bytes @ 0x6
   553                           
   554  0076                     ??___awdiv:	
   555                           ; 1 bytes @ 0x6
   556                           
   557  0076                     Lcd_Set_Cursor@b:	
   558                           ; 1 bytes @ 0x6
   559                           
   560  0076                     Lcd_Write_Char@y:	
   561                           ; 1 bytes @ 0x6
   562                           
   563                           
   564                           ; 1 bytes @ 0x6
   565  0076                     	ds	1
   566  0077                     ??_Lcd_Set_Cursor:
   567  0077                     ??_Lcd_Write_String:	
   568                           ; 1 bytes @ 0x7
   569                           
   570  0077                     Decimal@variable:	
   571                           ; 1 bytes @ 0x7
   572                           
   573                           
   574                           ; 1 bytes @ 0x7
   575  0077                     	ds	1
   576  0078                     Decimal@valor:
   577                           
   578                           ; 1 bytes @ 0x8
   579  0078                     	ds	1
   580                           
   581                           	psect	cstackBANK0
   582  0020                     __pcstackBANK0:
   583  0020                     Lcd_Set_Cursor@a:
   584  0020                     ___awdiv@counter:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0020                     Lcd_Write_String@i:	
   588                           ; 1 bytes @ 0x0
   589                           
   590                           
   591                           ; 2 bytes @ 0x0
   592  0020                     	ds	1
   593  0021                     Lcd_Set_Cursor@z:
   594  0021                     ___awdiv@sign:	
   595                           ; 1 bytes @ 0x1
   596                           
   597                           
   598                           ; 1 bytes @ 0x1
   599  0021                     	ds	1
   600  0022                     Lcd_Set_Cursor@y:
   601  0022                     Lcd_Write_String@a:	
   602                           ; 1 bytes @ 0x2
   603                           
   604  0022                     ___awdiv@quotient:	
   605                           ; 1 bytes @ 0x2
   606                           
   607                           
   608                           ; 2 bytes @ 0x2
   609  0022                     	ds	1
   610  0023                     Lcd_Set_Cursor@temp:
   611                           
   612                           ; 1 bytes @ 0x3
   613  0023                     	ds	1
   614  0024                     ??_Decimal:
   615                           
   616                           ; 1 bytes @ 0x4
   617  0024                     	ds	3
   618  0027                     ??_main:
   619                           
   620                           ; 1 bytes @ 0x7
   621  0027                     	ds	3
   622                           
   623                           	psect	maintext
   624  0016                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 73 in file "master_main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B00/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       3       0       0       0
   647 ;;      Totals:         0       3       0       0       0
   648 ;;Total ram usage:        3 bytes
   649 ;; Hardware stack levels required when called:    4
   650 ;; This function calls:
   651 ;;		_Decimal
   652 ;;		_Lcd_Clear
   653 ;;		_Lcd_Init
   654 ;;		_Lcd_Set_Cursor
   655 ;;		_Lcd_Write_Char
   656 ;;		_Lcd_Write_String
   657 ;;		_setup
   658 ;; This function is called by:
   659 ;;		Startup code after reset
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           
   664                           ;psect for function _main
   665  0016                     _main:
   666  0016                     l1315:	
   667                           ;incstack = 0
   668                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   669                           
   670                           
   671                           ;master_main.c: 74:     ANSEL = 0x00;
   672  0016  120A  118A  225F  120A  118A  	fcall	_setup
   673  001B                     l1317:
   674                           
   675                           ;master_main.c: 75: 
   676  001B  120A  118A  21B8  120A  118A  	fcall	_Lcd_Init
   677  0020                     l1319:
   678                           
   679                           ;master_main.c: 77:     TRISB = 0x00;
   680  0020  120A  118A  229E  120A  118A  	fcall	_Lcd_Clear
   681  0025                     l1321:
   682                           
   683                           ;master_main.c: 78:     TRISC = 0x00;
   684  0025  01F6               	clrf	Lcd_Set_Cursor@b
   685  0026  0AF6               	incf	Lcd_Set_Cursor@b,f
   686  0027  3001               	movlw	1
   687  0028  120A  118A  2160  120A  118A  	fcall	_Lcd_Set_Cursor
   688  002D                     l1323:
   689                           
   690                           ;master_main.c: 79:     TRISD = 0x00;
   691  002D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   692  002E  120A  118A  21FF  120A  118A  	fcall	_Lcd_Write_String
   693  0033                     l1325:
   694                           
   695                           ;master_main.c: 80:     TRISE = 0x00;
   696  0033  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   697  0034  120A  118A  21FF  120A  118A  	fcall	_Lcd_Write_String
   698  0039                     l1327:
   699                           
   700                           ;master_main.c: 81: 
   701  0039  3005               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   702  003A  120A  118A  21FF  120A  118A  	fcall	_Lcd_Write_String
   703  003F                     l1329:
   704                           
   705                           ;master_main.c: 83:     PORTB = 0x00;
   706  003F  01F6               	clrf	Lcd_Set_Cursor@b
   707  0040  0AF6               	incf	Lcd_Set_Cursor@b,f
   708  0041  3002               	movlw	2
   709  0042  120A  118A  2160  120A  118A  	fcall	_Lcd_Set_Cursor
   710  0047                     l1331:
   711                           
   712                           ;master_main.c: 84:     PORTC = 0x00;
   713  0047  30FF               	movlw	255
   714  0048  120A  118A  20F9  120A  118A  	fcall	_Decimal
   715  004D                     l1333:
   716                           
   717                           ;master_main.c: 85:     PORTD = 0x00;
   718  004D  087B               	movf	_Primer_digito,w
   719  004E  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   720  0053                     l1335:
   721                           
   722                           ;master_main.c: 86:     PORTE = 0x00;
   723  0053  087A               	movf	_Segundo_digito,w
   724  0054  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   725  0059                     l1337:
   726                           
   727                           ;master_main.c: 87: 
   728  0059  0879               	movf	_Tercer_digito,w
   729  005A  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   730  005F                     l1339:
   731                           
   732                           ;master_main.c: 88: 
   733  005F  3009               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   734  0060  120A  118A  21FF  120A  118A  	fcall	_Lcd_Write_String
   735  0065                     l1341:
   736                           
   737                           ;master_main.c: 89: }
   738  0065  3028               	movlw	40
   739  0066  120A  118A  20F9  120A  118A  	fcall	_Decimal
   740  006B                     l1343:
   741  006B  087B               	movf	_Primer_digito,w
   742  006C  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   743  0071                     l1345:
   744  0071  087A               	movf	_Segundo_digito,w
   745  0072  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   746  0077                     l1347:
   747  0077  0879               	movf	_Tercer_digito,w
   748  0078  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   749  007D                     l1349:
   750  007D  3015               	movlw	21
   751  007E  1283               	bcf	3,5	;RP0=0, select bank0
   752  007F  1303               	bcf	3,6	;RP1=0, select bank0
   753  0080  00A9               	movwf	??_main+2
   754  0081  304B               	movlw	75
   755  0082  00A8               	movwf	??_main+1
   756  0083  30BD               	movlw	189
   757  0084  00A7               	movwf	??_main
   758  0085                     u567:
   759  0085  0BA7               	decfsz	??_main,f
   760  0086  2885               	goto	u567
   761  0087  0BA8               	decfsz	??_main+1,f
   762  0088  2885               	goto	u567
   763  0089  0BA9               	decfsz	??_main+2,f
   764  008A  2885               	goto	u567
   765  008B  288C               	nop2
   766  008C  2820               	goto	l1319
   767  008D  120A  118A  280C   	ljmp	start
   768  0090                     __end_of_main:
   769                           
   770                           	psect	text1
   771  025F                     __ptext1:	
   772 ;; *************** function _setup *****************
   773 ;; Defined at:
   774 ;;		line 128 in file "master_main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		status,2
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   788 ;;      Params:         0       0       0       0       0
   789 ;;      Locals:         0       0       0       0       0
   790 ;;      Temps:          0       0       0       0       0
   791 ;;      Totals:         0       0       0       0       0
   792 ;;Total ram usage:        0 bytes
   793 ;; Hardware stack levels used:    1
   794 ;; Hardware stack levels required when called:    1
   795 ;; This function calls:
   796 ;;		Nothing
   797 ;; This function is called by:
   798 ;;		_main
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           
   803                           ;psect for function _setup
   804  025F                     _setup:
   805  025F                     l839:	
   806                           ;incstack = 0
   807                           ; Regs used in _setup: [status,2]
   808                           
   809  025F  1683               	bsf	3,5	;RP0=1, select bank1
   810  0260  1303               	bcf	3,6	;RP1=0, select bank1
   811  0261  170F               	bsf	15,6	;volatile
   812  0262  168F               	bsf	15,5	;volatile
   813  0263  160F               	bsf	15,4	;volatile
   814  0264  140F               	bsf	15,0	;volatile
   815  0265                     l841:
   816  0265  1683               	bsf	3,5	;RP0=1, select bank3
   817  0266  1703               	bsf	3,6	;RP1=1, select bank3
   818  0267  0189               	clrf	9	;volatile
   819  0268  0188               	clrf	8	;volatile
   820  0269  1683               	bsf	3,5	;RP0=1, select bank1
   821  026A  1303               	bcf	3,6	;RP1=0, select bank1
   822  026B  0185               	clrf	5	;volatile
   823  026C  0186               	clrf	6	;volatile
   824  026D  0187               	clrf	7	;volatile
   825  026E  0188               	clrf	8	;volatile
   826  026F  0189               	clrf	9	;volatile
   827  0270  1283               	bcf	3,5	;RP0=0, select bank0
   828  0271  1303               	bcf	3,6	;RP1=0, select bank0
   829  0272  0185               	clrf	5	;volatile
   830  0273  0186               	clrf	6	;volatile
   831  0274  0187               	clrf	7	;volatile
   832  0275  0188               	clrf	8	;volatile
   833  0276  0189               	clrf	9	;volatile
   834  0277                     l69:
   835  0277  0008               	return
   836  0278                     __end_of_setup:
   837                           
   838                           	psect	text2
   839  01FF                     __ptext2:	
   840 ;; *************** function _Lcd_Write_String *****************
   841 ;; Defined at:
   842 ;;		line 77 in file "LCD.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;  a               1    wreg     PTR unsigned char 
   845 ;;		 -> STR_4(3), STR_3(4), STR_2(3), STR_1(4), 
   846 ;; Auto vars:     Size  Location     Type
   847 ;;  a               1    2[BANK0 ] PTR unsigned char 
   848 ;;		 -> STR_4(3), STR_3(4), STR_2(3), STR_1(4), 
   849 ;;  i               2    0[BANK0 ] int 
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       3       0       0       0
   861 ;;      Temps:          0       0       0       0       0
   862 ;;      Totals:         0       3       0       0       0
   863 ;;Total ram usage:        3 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    3
   866 ;; This function calls:
   867 ;;		_Lcd_Write_Char
   868 ;; This function is called by:
   869 ;;		_main
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _Lcd_Write_String
   875  01FF                     _Lcd_Write_String:
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   879                           ;Lcd_Write_String@a stored from wreg
   880  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   881  0200  1303               	bcf	3,6	;RP1=0, select bank0
   882  0201  00A2               	movwf	Lcd_Write_String@a
   883  0202                     l1291:
   884                           
   885                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
   886  0202  01A0               	clrf	Lcd_Write_String@i
   887  0203  01A1               	clrf	Lcd_Write_String@i+1
   888  0204  2A1A               	goto	l1297
   889  0205                     l1293:
   890                           
   891                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
   892  0205  0820               	movf	Lcd_Write_String@i,w
   893  0206  0722               	addwf	Lcd_Write_String@a,w
   894  0207  0084               	movwf	4
   895  0208  120A  118A  228D  120A  118A  	fcall	stringdir
   896  020D  120A  118A  2228  120A  118A  	fcall	_Lcd_Write_Char
   897  0212                     l1295:
   898  0212  3001               	movlw	1
   899  0213  1283               	bcf	3,5	;RP0=0, select bank0
   900  0214  1303               	bcf	3,6	;RP1=0, select bank0
   901  0215  07A0               	addwf	Lcd_Write_String@i,f
   902  0216  1803               	skipnc
   903  0217  0AA1               	incf	Lcd_Write_String@i+1,f
   904  0218  3000               	movlw	0
   905  0219  07A1               	addwf	Lcd_Write_String@i+1,f
   906  021A                     l1297:
   907  021A  0820               	movf	Lcd_Write_String@i,w
   908  021B  0722               	addwf	Lcd_Write_String@a,w
   909  021C  0084               	movwf	4
   910  021D  120A  118A  228D  120A  118A  	fcall	stringdir
   911  0222  3A00               	xorlw	0
   912  0223  1D03               	skipz
   913  0224  2A26               	goto	u551
   914  0225  2A27               	goto	u550
   915  0226                     u551:
   916  0226  2A05               	goto	l1293
   917  0227                     u550:
   918  0227                     l104:
   919  0227  0008               	return
   920  0228                     __end_of_Lcd_Write_String:
   921                           
   922                           	psect	text3
   923  0228                     __ptext3:	
   924 ;; *************** function _Lcd_Write_Char *****************
   925 ;; Defined at:
   926 ;;		line 65 in file "LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  a               1    wreg     unsigned char 
   929 ;; Auto vars:     Size  Location     Type
   930 ;;  a               1    4[COMMON] unsigned char 
   931 ;;  y               1    6[COMMON] unsigned char 
   932 ;;  temp            1    5[COMMON] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1    wreg      void 
   935 ;; Registers used:
   936 ;;		wreg, status,2, status,0, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   942 ;;      Params:         0       0       0       0       0
   943 ;;      Locals:         3       0       0       0       0
   944 ;;      Temps:          1       0       0       0       0
   945 ;;      Totals:         4       0       0       0       0
   946 ;;Total ram usage:        4 bytes
   947 ;; Hardware stack levels used:    1
   948 ;; Hardware stack levels required when called:    2
   949 ;; This function calls:
   950 ;;		_Lcd_Port
   951 ;; This function is called by:
   952 ;;		_main
   953 ;;		_Lcd_Write_String
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function _Lcd_Write_Char
   959  0228                     _Lcd_Write_Char:
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   963                           ;Lcd_Write_Char@a stored from wreg
   964  0228  00F4               	movwf	Lcd_Write_Char@a
   965  0229                     l1179:
   966                           
   967                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
   968  0229  0874               	movf	Lcd_Write_Char@a,w
   969  022A  00F3               	movwf	??_Lcd_Write_Char
   970  022B  0873               	movf	??_Lcd_Write_Char,w
   971  022C  00F5               	movwf	Lcd_Write_Char@temp
   972                           
   973                           ;LCD.c: 68:     y = temp;
   974  022D  0875               	movf	Lcd_Write_Char@temp,w
   975  022E  00F3               	movwf	??_Lcd_Write_Char
   976  022F  0873               	movf	??_Lcd_Write_Char,w
   977  0230  00F6               	movwf	Lcd_Write_Char@y
   978  0231                     l1181:
   979                           
   980                           ;LCD.c: 69:     RE0 = 1;
   981  0231  1283               	bcf	3,5	;RP0=0, select bank0
   982  0232  1303               	bcf	3,6	;RP1=0, select bank0
   983  0233  1409               	bsf	9,0	;volatile
   984  0234                     l1183:
   985                           
   986                           ;LCD.c: 70:     Lcd_Port(y);
   987  0234  0876               	movf	Lcd_Write_Char@y,w
   988  0235  120A  118A  22B4  120A  118A  	fcall	_Lcd_Port
   989  023A                     l1185:
   990                           
   991                           ;LCD.c: 71:     RE1 = 1;
   992  023A  1283               	bcf	3,5	;RP0=0, select bank0
   993  023B  1303               	bcf	3,6	;RP1=0, select bank0
   994  023C  1489               	bsf	9,1	;volatile
   995  023D                     l1187:
   996                           
   997                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   998  023D  300D               	movlw	13
   999  023E  00F3               	movwf	??_Lcd_Write_Char
  1000  023F                     u577:
  1001  023F  0BF3               	decfsz	??_Lcd_Write_Char,f
  1002  0240  2A3F               	goto	u577
  1003  0241                     l1189:
  1004                           
  1005                           ;LCD.c: 73:     RE1 = 0;
  1006  0241  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0242  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0243  1089               	bcf	9,1	;volatile
  1009  0244                     l98:
  1010  0244  0008               	return
  1011  0245                     __end_of_Lcd_Write_Char:
  1012                           
  1013                           	psect	text4
  1014  0160                     __ptext4:	
  1015 ;; *************** function _Lcd_Set_Cursor *****************
  1016 ;; Defined at:
  1017 ;;		line 30 in file "LCD.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;  a               1    wreg     unsigned char 
  1020 ;;  b               1    6[COMMON] unsigned char 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  a               1    0[BANK0 ] unsigned char 
  1023 ;;  temp            1    3[BANK0 ] unsigned char 
  1024 ;;  y               1    2[BANK0 ] unsigned char 
  1025 ;;  z               1    1[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         1       0       0       0       0
  1036 ;;      Locals:         0       4       0       0       0
  1037 ;;      Temps:          2       0       0       0       0
  1038 ;;      Totals:         3       4       0       0       0
  1039 ;;Total ram usage:        7 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    3
  1042 ;; This function calls:
  1043 ;;		_Lcd_Cmd
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _Lcd_Set_Cursor
  1051  0160                     _Lcd_Set_Cursor:
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1055                           ;Lcd_Set_Cursor@a stored from wreg
  1056  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1057  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1058  0162  00A0               	movwf	Lcd_Set_Cursor@a
  1059  0163                     l1271:
  1060                           
  1061                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  1062  0163  0320               	decf	Lcd_Set_Cursor@a,w
  1063  0164  1D03               	btfss	3,2
  1064  0165  2967               	goto	u511
  1065  0166  2968               	goto	u510
  1066  0167                     u511:
  1067  0167  298D               	goto	l1281
  1068  0168                     u510:
  1069  0168                     l1273:
  1070                           
  1071                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  1072  0168  0876               	movf	Lcd_Set_Cursor@b,w
  1073  0169  3E7F               	addlw	127
  1074  016A  00F7               	movwf	??_Lcd_Set_Cursor
  1075  016B  0877               	movf	??_Lcd_Set_Cursor,w
  1076  016C  00A3               	movwf	Lcd_Set_Cursor@temp
  1077                           
  1078                           ;LCD.c: 34:         z = temp >> 4;
  1079  016D  0823               	movf	Lcd_Set_Cursor@temp,w
  1080  016E  00F7               	movwf	??_Lcd_Set_Cursor
  1081  016F  3004               	movlw	4
  1082  0170                     u525:
  1083  0170  1003               	clrc
  1084  0171  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1085  0172  3EFF               	addlw	-1
  1086  0173  1D03               	skipz
  1087  0174  2970               	goto	u525
  1088  0175  0877               	movf	??_Lcd_Set_Cursor,w
  1089  0176  00F8               	movwf	??_Lcd_Set_Cursor+1
  1090  0177  0878               	movf	??_Lcd_Set_Cursor+1,w
  1091  0178  00A1               	movwf	Lcd_Set_Cursor@z
  1092  0179                     l1275:
  1093                           
  1094                           ;LCD.c: 35:         y = temp & 0x0F;
  1095  0179  0823               	movf	Lcd_Set_Cursor@temp,w
  1096  017A  390F               	andlw	15
  1097  017B  00F7               	movwf	??_Lcd_Set_Cursor
  1098  017C  0877               	movf	??_Lcd_Set_Cursor,w
  1099  017D  00A2               	movwf	Lcd_Set_Cursor@y
  1100  017E                     l1277:
  1101                           
  1102                           ;LCD.c: 36:         Lcd_Cmd(z);
  1103  017E  0821               	movf	Lcd_Set_Cursor@z,w
  1104  017F  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1105  0184                     l1279:
  1106                           
  1107                           ;LCD.c: 37:         Lcd_Cmd(y);
  1108  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1109  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1110  0186  0822               	movf	Lcd_Set_Cursor@y,w
  1111  0187  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1112                           
  1113                           ;LCD.c: 38:     } else if (a == 2) {
  1114  018C  29B7               	goto	l92
  1115  018D                     l1281:
  1116  018D  3002               	movlw	2
  1117  018E  0620               	xorwf	Lcd_Set_Cursor@a,w
  1118  018F  1D03               	btfss	3,2
  1119  0190  2992               	goto	u531
  1120  0191  2993               	goto	u530
  1121  0192                     u531:
  1122  0192  29B7               	goto	l92
  1123  0193                     u530:
  1124  0193                     l1283:
  1125                           
  1126                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  1127  0193  0876               	movf	Lcd_Set_Cursor@b,w
  1128  0194  3EBF               	addlw	191
  1129  0195  00F7               	movwf	??_Lcd_Set_Cursor
  1130  0196  0877               	movf	??_Lcd_Set_Cursor,w
  1131  0197  00A3               	movwf	Lcd_Set_Cursor@temp
  1132                           
  1133                           ;LCD.c: 40:         z = temp >> 4;
  1134  0198  0823               	movf	Lcd_Set_Cursor@temp,w
  1135  0199  00F7               	movwf	??_Lcd_Set_Cursor
  1136  019A  3004               	movlw	4
  1137  019B                     u545:
  1138  019B  1003               	clrc
  1139  019C  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1140  019D  3EFF               	addlw	-1
  1141  019E  1D03               	skipz
  1142  019F  299B               	goto	u545
  1143  01A0  0877               	movf	??_Lcd_Set_Cursor,w
  1144  01A1  00F8               	movwf	??_Lcd_Set_Cursor+1
  1145  01A2  0878               	movf	??_Lcd_Set_Cursor+1,w
  1146  01A3  00A1               	movwf	Lcd_Set_Cursor@z
  1147  01A4                     l1285:
  1148                           
  1149                           ;LCD.c: 41:         y = temp & 0xF0;
  1150  01A4  0823               	movf	Lcd_Set_Cursor@temp,w
  1151  01A5  39F0               	andlw	240
  1152  01A6  00F7               	movwf	??_Lcd_Set_Cursor
  1153  01A7  0877               	movf	??_Lcd_Set_Cursor,w
  1154  01A8  00A2               	movwf	Lcd_Set_Cursor@y
  1155  01A9                     l1287:
  1156                           
  1157                           ;LCD.c: 42:         Lcd_Cmd(z);
  1158  01A9  0821               	movf	Lcd_Set_Cursor@z,w
  1159  01AA  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1160  01AF                     l1289:
  1161                           
  1162                           ;LCD.c: 43:         Lcd_Cmd(y);
  1163  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  1164  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  1165  01B1  0822               	movf	Lcd_Set_Cursor@y,w
  1166  01B2  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1167  01B7                     l92:
  1168  01B7  0008               	return
  1169  01B8                     __end_of_Lcd_Set_Cursor:
  1170                           
  1171                           	psect	text5
  1172  01B8                     __ptext5:	
  1173 ;; *************** function _Lcd_Init *****************
  1174 ;; Defined at:
  1175 ;;		line 47 in file "LCD.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, status,2, status,0, pclath, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1189 ;;      Params:         0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0
  1191 ;;      Temps:          2       0       0       0       0
  1192 ;;      Totals:         2       0       0       0       0
  1193 ;;Total ram usage:        2 bytes
  1194 ;; Hardware stack levels used:    1
  1195 ;; Hardware stack levels required when called:    3
  1196 ;; This function calls:
  1197 ;;		_Lcd_Cmd
  1198 ;;		_Lcd_Port
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           
  1205                           ;psect for function _Lcd_Init
  1206  01B8                     _Lcd_Init:
  1207  01B8                     l1259:	
  1208                           ;incstack = 0
  1209                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1210                           
  1211                           
  1212                           ;LCD.c: 48:     Lcd_Port(0x00);
  1213  01B8  3000               	movlw	0
  1214  01B9  120A  118A  22B4  120A  118A  	fcall	_Lcd_Port
  1215  01BE                     l1261:
  1216                           
  1217                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1218  01BE  301A               	movlw	26
  1219  01BF  00F7               	movwf	??_Lcd_Init+1
  1220  01C0  30F8               	movlw	248
  1221  01C1  00F6               	movwf	??_Lcd_Init
  1222  01C2                     u587:
  1223  01C2  0BF6               	decfsz	??_Lcd_Init,f
  1224  01C3  29C2               	goto	u587
  1225  01C4  0BF7               	decfsz	??_Lcd_Init+1,f
  1226  01C5  29C2               	goto	u587
  1227  01C6  0000               	nop
  1228  01C7                     l1263:
  1229                           
  1230                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  1231  01C7  3030               	movlw	48
  1232  01C8  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1233                           
  1234                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1235  01CD  3007               	movlw	7
  1236  01CE  00F7               	movwf	??_Lcd_Init+1
  1237  01CF  307D               	movlw	125
  1238  01D0  00F6               	movwf	??_Lcd_Init
  1239  01D1                     u597:
  1240  01D1  0BF6               	decfsz	??_Lcd_Init,f
  1241  01D2  29D1               	goto	u597
  1242  01D3  0BF7               	decfsz	??_Lcd_Init+1,f
  1243  01D4  29D1               	goto	u597
  1244  01D5                     l1265:
  1245                           
  1246                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  1247  01D5  3030               	movlw	48
  1248  01D6  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1249  01DB                     l1267:
  1250                           
  1251                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1252  01DB  3042               	movlw	66
  1253  01DC  00F6               	movwf	??_Lcd_Init
  1254  01DD                     u607:
  1255  01DD  0BF6               	decfsz	??_Lcd_Init,f
  1256  01DE  29DD               	goto	u607
  1257  01DF  0000               	nop
  1258                           
  1259                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  1260  01E0  3030               	movlw	48
  1261  01E1  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1262                           
  1263                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  1264  01E6  303C               	movlw	60
  1265  01E7  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1266                           
  1267                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  1268  01EC  3008               	movlw	8
  1269  01ED  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1270                           
  1271                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  1272  01F2  3001               	movlw	1
  1273  01F3  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1274                           
  1275                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  1276  01F8  3006               	movlw	6
  1277  01F9  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1278  01FE                     l95:
  1279  01FE  0008               	return
  1280  01FF                     __end_of_Lcd_Init:
  1281                           
  1282                           	psect	text6
  1283  029E                     __ptext6:	
  1284 ;; *************** function _Lcd_Clear *****************
  1285 ;; Defined at:
  1286 ;;		line 25 in file "LCD.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2, status,0, pclath, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    3
  1307 ;; This function calls:
  1308 ;;		_Lcd_Cmd
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _Lcd_Clear
  1316  029E                     _Lcd_Clear:
  1317  029E                     l1269:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1320                           
  1321                           
  1322                           ;LCD.c: 26:     Lcd_Cmd(0);
  1323  029E  3000               	movlw	0
  1324  029F  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1325                           
  1326                           ;LCD.c: 27:     Lcd_Cmd(1);
  1327  02A4  3001               	movlw	1
  1328  02A5  120A  118A  2245  120A  118A  	fcall	_Lcd_Cmd
  1329  02AA                     l86:
  1330  02AA  0008               	return
  1331  02AB                     __end_of_Lcd_Clear:
  1332                           
  1333                           	psect	text7
  1334  0245                     __ptext7:	
  1335 ;; *************** function _Lcd_Cmd *****************
  1336 ;; Defined at:
  1337 ;;		line 17 in file "LCD.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  a               1    wreg     unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  a               1    5[COMMON] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       0       0       0
  1352 ;;      Locals:         1       0       0       0       0
  1353 ;;      Temps:          2       0       0       0       0
  1354 ;;      Totals:         3       0       0       0       0
  1355 ;;Total ram usage:        3 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    2
  1358 ;; This function calls:
  1359 ;;		_Lcd_Port
  1360 ;; This function is called by:
  1361 ;;		_Lcd_Clear
  1362 ;;		_Lcd_Set_Cursor
  1363 ;;		_Lcd_Init
  1364 ;;		_Lcd_Shift_Right
  1365 ;;		_Lcd_Shift_Left
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           
  1370                           ;psect for function _Lcd_Cmd
  1371  0245                     _Lcd_Cmd:
  1372                           
  1373                           ;incstack = 0
  1374                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1375                           ;Lcd_Cmd@a stored from wreg
  1376  0245  00F5               	movwf	Lcd_Cmd@a
  1377  0246                     l1191:
  1378                           
  1379                           ;LCD.c: 18:     RE0 = 0;
  1380  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1381  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1382  0248  1009               	bcf	9,0	;volatile
  1383  0249                     l1193:
  1384                           
  1385                           ;LCD.c: 19:     Lcd_Port(a);
  1386  0249  0875               	movf	Lcd_Cmd@a,w
  1387  024A  120A  118A  22B4  120A  118A  	fcall	_Lcd_Port
  1388  024F                     l1195:
  1389                           
  1390                           ;LCD.c: 20:     RE1 = 1;
  1391  024F  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0250  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0251  1489               	bsf	9,1	;volatile
  1394  0252                     l1197:
  1395                           
  1396                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1397  0252  3006               	movlw	6
  1398  0253  00F4               	movwf	??_Lcd_Cmd+1
  1399  0254  3030               	movlw	48
  1400  0255  00F3               	movwf	??_Lcd_Cmd
  1401  0256                     u617:
  1402  0256  0BF3               	decfsz	??_Lcd_Cmd,f
  1403  0257  2A56               	goto	u617
  1404  0258  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1405  0259  2A56               	goto	u617
  1406  025A  0000               	nop
  1407  025B                     l1199:
  1408                           
  1409                           ;LCD.c: 22:     RE1 = 0;
  1410  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1411  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1412  025D  1089               	bcf	9,1	;volatile
  1413  025E                     l83:
  1414  025E  0008               	return
  1415  025F                     __end_of_Lcd_Cmd:
  1416                           
  1417                           	psect	text8
  1418  02B4                     __ptext8:	
  1419 ;; *************** function _Lcd_Port *****************
  1420 ;; Defined at:
  1421 ;;		line 12 in file "LCD.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  a               1    wreg     unsigned char 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  a               1    2[COMMON] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1435 ;;      Params:         0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0
  1438 ;;      Totals:         1       0       0       0       0
  1439 ;;Total ram usage:        1 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    1
  1442 ;; This function calls:
  1443 ;;		Nothing
  1444 ;; This function is called by:
  1445 ;;		_Lcd_Cmd
  1446 ;;		_Lcd_Init
  1447 ;;		_Lcd_Write_Char
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           
  1452                           ;psect for function _Lcd_Port
  1453  02B4                     _Lcd_Port:
  1454                           
  1455                           ;incstack = 0
  1456                           ; Regs used in _Lcd_Port: [wreg]
  1457                           ;Lcd_Port@a stored from wreg
  1458  02B4  00F2               	movwf	Lcd_Port@a
  1459  02B5                     l1177:
  1460                           
  1461                           ;LCD.c: 13:     PORTD = a;
  1462  02B5  0872               	movf	Lcd_Port@a,w
  1463  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  1464  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  1465  02B8  0088               	movwf	8	;volatile
  1466  02B9                     l80:
  1467  02B9  0008               	return
  1468  02BA                     __end_of_Lcd_Port:
  1469                           
  1470                           	psect	text9
  1471  00F9                     __ptext9:	
  1472 ;; *************** function _Decimal *****************
  1473 ;; Defined at:
  1474 ;;		line 110 in file "master_main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  variable        1    wreg     unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  variable        1    7[COMMON] unsigned char 
  1479 ;;  valor           1    8[COMMON] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, pclath, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       0       0       0
  1490 ;;      Locals:         2       0       0       0       0
  1491 ;;      Temps:          0       3       0       0       0
  1492 ;;      Totals:         2       3       0       0       0
  1493 ;;Total ram usage:        5 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; Hardware stack levels required when called:    2
  1496 ;; This function calls:
  1497 ;;		___awdiv
  1498 ;;		___bmul
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _Decimal
  1506  00F9                     _Decimal:
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _Decimal: [wreg+status,2+status,0+pclath+cstack]
  1510                           ;Decimal@variable stored from wreg
  1511  00F9  00F7               	movwf	Decimal@variable
  1512  00FA                     l1299:
  1513  00FA  0877               	movf	Decimal@variable,w
  1514  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1515  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1516  00FD  00A4               	movwf	??_Decimal
  1517  00FE  0824               	movf	??_Decimal,w
  1518  00FF  00F8               	movwf	Decimal@valor
  1519  0100                     l1301:
  1520  0100  3064               	movlw	100
  1521  0101  00F2               	movwf	___awdiv@divisor
  1522  0102  3000               	movlw	0
  1523  0103  00F3               	movwf	___awdiv@divisor+1
  1524  0104  0878               	movf	Decimal@valor,w
  1525  0105  00A4               	movwf	??_Decimal
  1526  0106  01A5               	clrf	??_Decimal+1
  1527  0107  0824               	movf	??_Decimal,w
  1528  0108  00F4               	movwf	___awdiv@dividend
  1529  0109  0825               	movf	??_Decimal+1,w
  1530  010A  00F5               	movwf	___awdiv@dividend+1
  1531  010B  120A  118A  2090  120A  118A  	fcall	___awdiv
  1532  0110  0872               	movf	?___awdiv,w
  1533  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0113  00A6               	movwf	??_Decimal+2
  1536  0114  0826               	movf	??_Decimal+2,w
  1537  0115  00FB               	movwf	_Primer_digito
  1538  0116                     l1303:
  1539  0116  309C               	movlw	156
  1540  0117  00A4               	movwf	??_Decimal
  1541  0118  0824               	movf	??_Decimal,w
  1542  0119  00F2               	movwf	___bmul@multiplicand
  1543  011A  087B               	movf	_Primer_digito,w
  1544  011B  120A  118A  2278  120A  118A  	fcall	___bmul
  1545  0120  0778               	addwf	Decimal@valor,w
  1546  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0123  00A5               	movwf	??_Decimal+1
  1549  0124  0825               	movf	??_Decimal+1,w
  1550  0125  00F8               	movwf	Decimal@valor
  1551  0126                     l1305:
  1552  0126  300A               	movlw	10
  1553  0127  00F2               	movwf	___awdiv@divisor
  1554  0128  3000               	movlw	0
  1555  0129  00F3               	movwf	___awdiv@divisor+1
  1556  012A  0878               	movf	Decimal@valor,w
  1557  012B  00A4               	movwf	??_Decimal
  1558  012C  01A5               	clrf	??_Decimal+1
  1559  012D  0824               	movf	??_Decimal,w
  1560  012E  00F4               	movwf	___awdiv@dividend
  1561  012F  0825               	movf	??_Decimal+1,w
  1562  0130  00F5               	movwf	___awdiv@dividend+1
  1563  0131  120A  118A  2090  120A  118A  	fcall	___awdiv
  1564  0136  0872               	movf	?___awdiv,w
  1565  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0139  00A6               	movwf	??_Decimal+2
  1568  013A  0826               	movf	??_Decimal+2,w
  1569  013B  00FA               	movwf	_Segundo_digito
  1570  013C                     l1307:
  1571  013C  30F6               	movlw	246
  1572  013D  00A4               	movwf	??_Decimal
  1573  013E  0824               	movf	??_Decimal,w
  1574  013F  00F2               	movwf	___bmul@multiplicand
  1575  0140  087A               	movf	_Segundo_digito,w
  1576  0141  120A  118A  2278  120A  118A  	fcall	___bmul
  1577  0146  0778               	addwf	Decimal@valor,w
  1578  0147  1283               	bcf	3,5	;RP0=0, select bank0
  1579  0148  1303               	bcf	3,6	;RP1=0, select bank0
  1580  0149  00A5               	movwf	??_Decimal+1
  1581  014A  0825               	movf	??_Decimal+1,w
  1582  014B  00F8               	movwf	Decimal@valor
  1583  014C  0878               	movf	Decimal@valor,w
  1584  014D  00A4               	movwf	??_Decimal
  1585  014E  0824               	movf	??_Decimal,w
  1586  014F  00F9               	movwf	_Tercer_digito
  1587  0150                     l1309:
  1588  0150  087B               	movf	_Primer_digito,w
  1589  0151  3E30               	addlw	48
  1590  0152  00A4               	movwf	??_Decimal
  1591  0153  0824               	movf	??_Decimal,w
  1592  0154  00FB               	movwf	_Primer_digito
  1593  0155                     l1311:
  1594  0155  087A               	movf	_Segundo_digito,w
  1595  0156  3E30               	addlw	48
  1596  0157  00A4               	movwf	??_Decimal
  1597  0158  0824               	movf	??_Decimal,w
  1598  0159  00FA               	movwf	_Segundo_digito
  1599  015A                     l1313:
  1600  015A  0879               	movf	_Tercer_digito,w
  1601  015B  3E30               	addlw	48
  1602  015C  00A4               	movwf	??_Decimal
  1603  015D  0824               	movf	??_Decimal,w
  1604  015E  00F9               	movwf	_Tercer_digito
  1605  015F                     l66:
  1606  015F  0008               	return
  1607  0160                     __end_of_Decimal:
  1608                           
  1609                           	psect	text10
  1610  0278                     __ptext10:	
  1611 ;; *************** function ___bmul *****************
  1612 ;; Defined at:
  1613 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  multiplier      1    wreg     unsigned char 
  1616 ;;  multiplicand    1    2[COMMON] unsigned char 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;  multiplier      1    5[COMMON] unsigned char 
  1619 ;;  product         1    4[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      unsigned char 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         1       0       0       0       0
  1630 ;;      Locals:         2       0       0       0       0
  1631 ;;      Temps:          1       0       0       0       0
  1632 ;;      Totals:         4       0       0       0       0
  1633 ;;Total ram usage:        4 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:    1
  1636 ;; This function calls:
  1637 ;;		Nothing
  1638 ;; This function is called by:
  1639 ;;		_Decimal
  1640 ;; This function uses a non-reentrant model
  1641 ;;
  1642                           
  1643                           
  1644                           ;psect for function ___bmul
  1645  0278                     ___bmul:
  1646                           
  1647                           ;incstack = 0
  1648                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1649                           ;___bmul@multiplier stored from wreg
  1650  0278  00F5               	movwf	___bmul@multiplier
  1651  0279                     l1201:
  1652  0279  01F4               	clrf	___bmul@product
  1653  027A                     l1203:
  1654  027A  1C75               	btfss	___bmul@multiplier,0
  1655  027B  2A7D               	goto	u391
  1656  027C  2A7E               	goto	u390
  1657  027D                     u391:
  1658  027D  2A82               	goto	l1207
  1659  027E                     u390:
  1660  027E                     l1205:
  1661  027E  0872               	movf	___bmul@multiplicand,w
  1662  027F  00F3               	movwf	??___bmul
  1663  0280  0873               	movf	??___bmul,w
  1664  0281  07F4               	addwf	___bmul@product,f
  1665  0282                     l1207:
  1666  0282  1003               	clrc
  1667  0283  0DF2               	rlf	___bmul@multiplicand,f
  1668  0284                     l1209:
  1669  0284  1003               	clrc
  1670  0285  0CF5               	rrf	___bmul@multiplier,f
  1671  0286  0875               	movf	___bmul@multiplier,w
  1672  0287  1D03               	btfss	3,2
  1673  0288  2A8A               	goto	u401
  1674  0289  2A8B               	goto	u400
  1675  028A                     u401:
  1676  028A  2A7A               	goto	l1203
  1677  028B                     u400:
  1678  028B                     l1211:
  1679  028B  0874               	movf	___bmul@product,w
  1680  028C                     l277:
  1681  028C  0008               	return
  1682  028D                     __end_of___bmul:
  1683                           
  1684                           	psect	text11
  1685  0090                     __ptext11:	
  1686 ;; *************** function ___awdiv *****************
  1687 ;; Defined at:
  1688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  divisor         2    2[COMMON] int 
  1691 ;;  dividend        2    4[COMMON] int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  quotient        2    2[BANK0 ] int 
  1694 ;;  sign            1    1[BANK0 ] unsigned char 
  1695 ;;  counter         1    0[BANK0 ] unsigned char 
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  2    2[COMMON] int 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1705 ;;      Params:         4       0       0       0       0
  1706 ;;      Locals:         0       4       0       0       0
  1707 ;;      Temps:          1       0       0       0       0
  1708 ;;      Totals:         5       4       0       0       0
  1709 ;;Total ram usage:        9 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    1
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_Decimal
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function ___awdiv
  1721  0090                     ___awdiv:
  1722  0090                     l1215:	
  1723                           ;incstack = 0
  1724                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1725                           
  1726  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1727  0091  1303               	bcf	3,6	;RP1=0, select bank0
  1728  0092  01A1               	clrf	___awdiv@sign
  1729  0093                     l1217:
  1730  0093  1FF3               	btfss	___awdiv@divisor+1,7
  1731  0094  2896               	goto	u411
  1732  0095  2897               	goto	u410
  1733  0096                     u411:
  1734  0096  289E               	goto	l1223
  1735  0097                     u410:
  1736  0097                     l1219:
  1737  0097  09F2               	comf	___awdiv@divisor,f
  1738  0098  09F3               	comf	___awdiv@divisor+1,f
  1739  0099  0AF2               	incf	___awdiv@divisor,f
  1740  009A  1903               	skipnz
  1741  009B  0AF3               	incf	___awdiv@divisor+1,f
  1742  009C                     l1221:
  1743  009C  01A1               	clrf	___awdiv@sign
  1744  009D  0AA1               	incf	___awdiv@sign,f
  1745  009E                     l1223:
  1746  009E  1FF5               	btfss	___awdiv@dividend+1,7
  1747  009F  28A1               	goto	u421
  1748  00A0  28A2               	goto	u420
  1749  00A1                     u421:
  1750  00A1  28AB               	goto	l1229
  1751  00A2                     u420:
  1752  00A2                     l1225:
  1753  00A2  09F4               	comf	___awdiv@dividend,f
  1754  00A3  09F5               	comf	___awdiv@dividend+1,f
  1755  00A4  0AF4               	incf	___awdiv@dividend,f
  1756  00A5  1903               	skipnz
  1757  00A6  0AF5               	incf	___awdiv@dividend+1,f
  1758  00A7                     l1227:
  1759  00A7  3001               	movlw	1
  1760  00A8  00F6               	movwf	??___awdiv
  1761  00A9  0876               	movf	??___awdiv,w
  1762  00AA  06A1               	xorwf	___awdiv@sign,f
  1763  00AB                     l1229:
  1764  00AB  01A2               	clrf	___awdiv@quotient
  1765  00AC  01A3               	clrf	___awdiv@quotient+1
  1766  00AD                     l1231:
  1767  00AD  0872               	movf	___awdiv@divisor,w
  1768  00AE  0473               	iorwf	___awdiv@divisor+1,w
  1769  00AF  1903               	btfsc	3,2
  1770  00B0  28B2               	goto	u431
  1771  00B1  28B3               	goto	u430
  1772  00B2                     u431:
  1773  00B2  28EA               	goto	l1251
  1774  00B3                     u430:
  1775  00B3                     l1233:
  1776  00B3  01A0               	clrf	___awdiv@counter
  1777  00B4  0AA0               	incf	___awdiv@counter,f
  1778  00B5  28C1               	goto	l1239
  1779  00B6                     l1235:
  1780  00B6  3001               	movlw	1
  1781  00B7                     u445:
  1782  00B7  1003               	clrc
  1783  00B8  0DF2               	rlf	___awdiv@divisor,f
  1784  00B9  0DF3               	rlf	___awdiv@divisor+1,f
  1785  00BA  3EFF               	addlw	-1
  1786  00BB  1D03               	skipz
  1787  00BC  28B7               	goto	u445
  1788  00BD                     l1237:
  1789  00BD  3001               	movlw	1
  1790  00BE  00F6               	movwf	??___awdiv
  1791  00BF  0876               	movf	??___awdiv,w
  1792  00C0  07A0               	addwf	___awdiv@counter,f
  1793  00C1                     l1239:
  1794  00C1  1FF3               	btfss	___awdiv@divisor+1,7
  1795  00C2  28C4               	goto	u451
  1796  00C3  28C5               	goto	u450
  1797  00C4                     u451:
  1798  00C4  28B6               	goto	l1235
  1799  00C5                     u450:
  1800  00C5                     l1241:
  1801  00C5  3001               	movlw	1
  1802  00C6                     u465:
  1803  00C6  1003               	clrc
  1804  00C7  0DA2               	rlf	___awdiv@quotient,f
  1805  00C8  0DA3               	rlf	___awdiv@quotient+1,f
  1806  00C9  3EFF               	addlw	-1
  1807  00CA  1D03               	skipz
  1808  00CB  28C6               	goto	u465
  1809  00CC  0873               	movf	___awdiv@divisor+1,w
  1810  00CD  0275               	subwf	___awdiv@dividend+1,w
  1811  00CE  1D03               	skipz
  1812  00CF  28D2               	goto	u475
  1813  00D0  0872               	movf	___awdiv@divisor,w
  1814  00D1  0274               	subwf	___awdiv@dividend,w
  1815  00D2                     u475:
  1816  00D2  1C03               	skipc
  1817  00D3  28D5               	goto	u471
  1818  00D4  28D6               	goto	u470
  1819  00D5                     u471:
  1820  00D5  28DD               	goto	l1247
  1821  00D6                     u470:
  1822  00D6                     l1243:
  1823  00D6  0872               	movf	___awdiv@divisor,w
  1824  00D7  02F4               	subwf	___awdiv@dividend,f
  1825  00D8  0873               	movf	___awdiv@divisor+1,w
  1826  00D9  1C03               	skipc
  1827  00DA  03F5               	decf	___awdiv@dividend+1,f
  1828  00DB  02F5               	subwf	___awdiv@dividend+1,f
  1829  00DC                     l1245:
  1830  00DC  1422               	bsf	___awdiv@quotient,0
  1831  00DD                     l1247:
  1832  00DD  3001               	movlw	1
  1833  00DE                     u485:
  1834  00DE  1003               	clrc
  1835  00DF  0CF3               	rrf	___awdiv@divisor+1,f
  1836  00E0  0CF2               	rrf	___awdiv@divisor,f
  1837  00E1  3EFF               	addlw	-1
  1838  00E2  1D03               	skipz
  1839  00E3  28DE               	goto	u485
  1840  00E4                     l1249:
  1841  00E4  3001               	movlw	1
  1842  00E5  02A0               	subwf	___awdiv@counter,f
  1843  00E6  1D03               	btfss	3,2
  1844  00E7  28E9               	goto	u491
  1845  00E8  28EA               	goto	u490
  1846  00E9                     u491:
  1847  00E9  28C5               	goto	l1241
  1848  00EA                     u490:
  1849  00EA                     l1251:
  1850  00EA  0821               	movf	___awdiv@sign,w
  1851  00EB  1903               	btfsc	3,2
  1852  00EC  28EE               	goto	u501
  1853  00ED  28EF               	goto	u500
  1854  00EE                     u501:
  1855  00EE  28F4               	goto	l1255
  1856  00EF                     u500:
  1857  00EF                     l1253:
  1858  00EF  09A2               	comf	___awdiv@quotient,f
  1859  00F0  09A3               	comf	___awdiv@quotient+1,f
  1860  00F1  0AA2               	incf	___awdiv@quotient,f
  1861  00F2  1903               	skipnz
  1862  00F3  0AA3               	incf	___awdiv@quotient+1,f
  1863  00F4                     l1255:
  1864  00F4  0823               	movf	___awdiv@quotient+1,w
  1865  00F5  00F3               	movwf	?___awdiv+1
  1866  00F6  0822               	movf	___awdiv@quotient,w
  1867  00F7  00F2               	movwf	?___awdiv
  1868  00F8                     l404:
  1869  00F8  0008               	return
  1870  00F9                     __end_of___awdiv:
  1871                           
  1872                           	psect	text12
  1873  02AB                     __ptext12:	
  1874 ;; *************** function _isr *****************
  1875 ;; Defined at:
  1876 ;;		line 102 in file "master_main.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;		None
  1879 ;; Auto vars:     Size  Location     Type
  1880 ;;		None
  1881 ;; Return value:  Size  Location     Type
  1882 ;;                  1    wreg      void 
  1883 ;; Registers used:
  1884 ;;		None
  1885 ;; Tracked objects:
  1886 ;;		On entry : 0/0
  1887 ;;		On exit  : 0/0
  1888 ;;		Unchanged: 0/0
  1889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1890 ;;      Params:         0       0       0       0       0
  1891 ;;      Locals:         0       0       0       0       0
  1892 ;;      Temps:          2       0       0       0       0
  1893 ;;      Totals:         2       0       0       0       0
  1894 ;;Total ram usage:        2 bytes
  1895 ;; Hardware stack levels used:    1
  1896 ;; This function calls:
  1897 ;;		Nothing
  1898 ;; This function is called by:
  1899 ;;		Interrupt level 1
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           
  1904                           ;psect for function _isr
  1905  02AB                     _isr:
  1906  02AB                     i1l939:
  1907  02AB  138B               	bcf	11,7	;volatile
  1908  02AC  178B               	bsf	11,7	;volatile
  1909  02AD                     i1l63:
  1910  02AD  0871               	movf	??_isr+1,w
  1911  02AE  008A               	movwf	10
  1912  02AF  0E70               	swapf	??_isr,w
  1913  02B0  0083               	movwf	3
  1914  02B1  0EFE               	swapf	btemp,f
  1915  02B2  0E7E               	swapf	btemp,w
  1916  02B3  0009               	retfie
  1917  02B4                     __end_of_isr:
  1918  007E                     btemp	set	126	;btemp
  1919  007E                     wtemp0	set	126
  1920                           
  1921                           	psect	intentry
  1922  0004                     __pintentry:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _isr: []
  1925                           
  1926  0004                     interrupt_function:
  1927  007E                     saved_w	set	btemp
  1928  0004  00FE               	movwf	btemp
  1929  0005  0E03               	swapf	3,w
  1930  0006  00F0               	movwf	??_isr
  1931  0007  080A               	movf	10,w
  1932  0008  00F1               	movwf	??_isr+1
  1933  0009  120A  118A  2AAB   	ljmp	_isr
  1934                           
  1935                           	psect	config
  1936                           
  1937                           ;Config register CONFIG1 @ 0x2007
  1938                           ;	Oscillator Selection bits
  1939                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1940                           ;	Watchdog Timer Enable bit
  1941                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1942                           ;	Power-up Timer Enable bit
  1943                           ;	PWRTE = OFF, PWRT disabled
  1944                           ;	RE3/MCLR pin function select bit
  1945                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1946                           ;	Code Protection bit
  1947                           ;	CP = OFF, Program memory code protection is disabled
  1948                           ;	Data Code Protection bit
  1949                           ;	CPD = OFF, Data memory code protection is disabled
  1950                           ;	Brown Out Reset Selection bits
  1951                           ;	BOREN = OFF, BOR disabled
  1952                           ;	Internal External Switchover bit
  1953                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1954                           ;	Fail-Safe Clock Monitor Enabled bit
  1955                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1956                           ;	Low Voltage Programming Enable bit
  1957                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1958                           ;	In-Circuit Debugger Mode bit
  1959                           ;	DEBUG = 0x1, unprogrammed default
  1960  2007                     	org	8199
  1961  2007  20D4               	dw	8404
  1962                           
  1963                           ;Config register CONFIG2 @ 0x2008
  1964                           ;	Brown-out Reset Selection bit
  1965                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1966                           ;	Flash Program Memory Self Write Enable bits
  1967                           ;	WRT = OFF, Write protection off
  1968  2008                     	org	8200
  1969  2008  3FFF               	dw	16383

Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[3]), STR_3(CODE[4]), STR_2(CODE[3]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Decimal
    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Decimal->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decimal
    _Decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2637
                                              7 BANK0      3     3      0
                            _Decimal
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     404
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Decimal                                              5     5      0    1316
                                              7 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decimal
     ___awdiv
     ___bmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Aug 22 17:56:40 2021

                        pc 0002             ___bmul@product 0074                         l80 02B9  
                       l66 015F                         l83 025E                         l92 01B7  
                       l69 0277                         l86 02AA                         l95 01FE  
                       l98 0244               ___awdiv@sign 0021                         fsr 0004  
                      l104 0227                        l404 00F8                        l277 028C  
                      l841 0265                        l839 025F                        _GIE 005F  
                      _RE0 0048                        _RE1 0049                        u400 028B  
                      u401 028A                        u410 0097                        u411 0096  
                      u500 00EF                        u420 00A2                        u501 00EE  
                      u421 00A1                        u430 00B3                        u510 0168  
                      u431 00B2                        u511 0167                        u450 00C5  
                      u530 0193                        u451 00C4                        u531 0192  
                      u445 00B7                        u525 0170                        u470 00D6  
                      u390 027E                        u550 0227                        u471 00D5  
                      u391 027D                        u607 01DD                        u551 0226  
                      u465 00C6                        u617 0256                        u545 019B  
                      u490 00EA                        u491 00E9                        u475 00D2  
                      u485 00DE                        u567 0085                        u577 023F  
                      u587 01C2                        u597 01D1                        _isr 02AB  
                      fsr0 0004                       l1201 0279                       l1211 028B  
                     l1203 027A                       l1221 009C                       l1205 027E  
                     l1301 0100                       l1231 00AD                       l1223 009E  
                     l1215 0090                       l1207 0282                       l1311 0155  
                     l1303 0116                       l1241 00C5                       l1233 00B3  
                     l1225 00A2                       l1217 0093                       l1209 0284  
                     l1313 015A                       l1305 0126                       l1321 0025  
                     l1243 00D6                       l1235 00B6                       l1251 00EA  
                     l1227 00A7                       l1219 0097                       l1307 013C  
                     l1331 0047                       l1323 002D                       l1315 0016  
                     l1253 00EF                       l1245 00DC                       l1237 00BD  
                     l1229 00AB                       l1309 0150                       l1261 01BE  
                     l1181 0231                       l1341 0065                       l1333 004D  
                     l1325 0033                       l1317 001B                       l1255 00F4  
                     l1247 00DD                       l1239 00C1                       l1191 0246  
                     l1263 01C7                       l1271 0163                       l1183 0234  
                     l1343 006B                       l1335 0053                       l1327 0039  
                     l1319 0020                       l1249 00E4                       l1177 02B5  
                     l1193 0249                       l1265 01D5                       l1273 0168  
                     l1281 018D                       l1185 023A                       l1345 0071  
                     l1337 0059                       l1329 003F                       l1195 024F  
                     l1267 01DB                       l1259 01B8                       l1283 0193  
                     l1275 0179                       l1187 023D                       l1179 0229  
                     l1291 0202                       l1347 0077                       l1339 005F  
                     l1197 0252                       l1269 029E                       l1285 01A4  
                     l1277 017E                       l1189 0241                       l1293 0205  
                     l1349 007D                       l1199 025B                       l1287 01A9  
                     l1279 0184                       l1295 0212                       l1289 01AF  
                     l1297 021A                       l1299 00FA                       ?_isr 0070  
                     STR_1 0293                       STR_2 029B                       STR_3 0297  
                     STR_4 029B                       _PEIE 005E                       i1l63 02AD  
        ?_Lcd_Write_String 0070                       _main 0016                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0077            __end_of_Decimal 0160  
          __end_of_Lcd_Cmd 025F          ___bmul@multiplier 0075             _Segundo_digito 007A  
                    ??_isr 0070                      ?_main 0070            __end_of___awdiv 00F9  
                    _ANSEL 0188            ___awdiv@divisor 0072                      i1l939 02AB  
          ___awdiv@counter 0020                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      _setup 025F  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 01FF           __end_of_Lcd_Port 02BA            __initialization 000F  
             __end_of_main 0090                     ??_main 0027         __size_of_Lcd_Clear 000D  
         ___awdiv@dividend 0074                     ?_setup 0070                     _ANSELH 0189  
                ??_Decimal 0024                  ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 001D  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     ___bmul 0278  
                ??___awdiv 0076           ___awdiv@quotient 0022                     saved_w 007E  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021    __end_of__initialization 0012          __end_of_Lcd_Clear 02AB  
      ___bmul@multiplicand 0072             __pcstackCOMMON 0070              __end_of_setup 0278  
           _Lcd_Set_Cursor 0160                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                  ??_setup 0072                 __pmaintext 0016                    ?___bmul 0072  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 01B8  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 028D                    _Decimal 00F9  
           _Lcd_Write_Char 0228                    _Lcd_Cmd 0245            __size_of___bmul 0015  
                  ___awdiv 0090            ?_Lcd_Set_Cursor 0076                    __ptext1 025F  
                  __ptext2 01FF                    __ptext3 0228                    __ptext4 0160  
                  __ptext5 01B8                    __ptext6 029E                    __ptext7 0245  
                  __ptext8 02B4                    __ptext9 00F9               __size_of_isr 0009  
   __end_of_Lcd_Write_Char 0245       end_of_initialization 0012               Decimal@valor 0078  
                Lcd_Port@a 0072                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0022          Lcd_Write_String@i 0020                  _Lcd_Clear 029E  
           __end_of___bmul 028D           _Lcd_Write_String 01FF        start_initialization 000F  
              __end_of_isr 02B4          __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070                   ??___bmul 0073            Lcd_Write_Char@a 0074  
          Lcd_Write_Char@y 0076              _Tercer_digito 0079                __pbssCOMMON 0079  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Decimal 0070  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072  
                __pstrings 028D            Decimal@variable 0077             __size_of_setup 0019  
        interrupt_function 0004              _Primer_digito 007B                   Lcd_Cmd@a 0075  
              ??_Lcd_Clear 0076                __stringbase 0292           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 01B8                   _Lcd_Port 02B4   __end_of_Lcd_Write_String 0228  
         __size_of_Decimal 0067           __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069  
       __end_of__stringtab 0293                   __ptext10 0278                   __ptext11 0090  
                 __ptext12 02AB              __size_of_main 007A                 _INTCONbits 000B  
       Lcd_Write_Char@temp 0075                   intlevel1 0000                  stringcode 028D  
               _OSCCONbits 008F         Lcd_Set_Cursor@temp 0023                   stringdir 028D  
                 stringtab 028D                _SSPCON2bits 0091  
