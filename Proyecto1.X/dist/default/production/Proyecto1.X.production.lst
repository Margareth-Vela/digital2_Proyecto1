

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 23 22:07:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0013                     _SSPBUF	set	19
   374  0014                     _SSPCON	set	20
   375  0009                     _PORTE	set	9
   376  0008                     _PORTD	set	8
   377  0007                     _PORTC	set	7
   378  0006                     _PORTB	set	6
   379  0005                     _PORTA	set	5
   380  000B                     _INTCONbits	set	11
   381  0063                     _SSPIF	set	99
   382  005E                     _PEIE	set	94
   383  005F                     _GIE	set	95
   384  0049                     _RE1	set	73
   385  0048                     _RE0	set	72
   386  0091                     _SSPCON2bits	set	145
   387  0087                     _TRISCbits	set	135
   388  0094                     _SSPSTAT	set	148
   389  0093                     _SSPADD	set	147
   390  0091                     _SSPCON2	set	145
   391  0089                     _TRISE	set	137
   392  0088                     _TRISD	set	136
   393  0087                     _TRISC	set	135
   394  0086                     _TRISB	set	134
   395  0085                     _TRISA	set	133
   396  008F                     _OSCCONbits	set	143
   397  0463                     _SSPIE	set	1123
   398  043C                     _TRISC4	set	1084
   399  043B                     _TRISC3	set	1083
   400  0188                     _ANSEL	set	392
   401  0189                     _ANSELH	set	393
   402                           
   403                           	psect	strings
   404  02D4                     __pstrings:
   405  02D4                     stringtab:
   406  02D4                     __stringtab:
   407  02D4                     stringcode:	
   408                           ;	String table - string pointers are 1 byte each
   409                           
   410  02D4                     stringdir:
   411  02D4  3002               	movlw	high stringdir
   412  02D5  008A               	movwf	10
   413  02D6  0804               	movf	4,w
   414  02D7  0A84               	incf	4,f
   415  02D8  0782               	addwf	2,f
   416  02D9                     __stringbase:
   417  02D9  3400               	retlw	0
   418  02DA                     __end_of__stringtab:
   419  02DA                     STR_5:
   420  02DA  344F               	retlw	79	;'O'
   421  02DB  3450               	retlw	80	;'P'
   422  02DC  3431               	retlw	49	;'1'
   423  02DD  3400               	retlw	0
   424  02DE                     STR_7:
   425  02DE  344F               	retlw	79	;'O'
   426  02DF  3450               	retlw	80	;'P'
   427  02E0  3432               	retlw	50	;'2'
   428  02E1  3400               	retlw	0
   429  02E2                     STR_1:
   430  02E2  3453               	retlw	83	;'S'
   431  02E3  3431               	retlw	49	;'1'
   432  02E4  343A               	retlw	58	;':'
   433  02E5  3400               	retlw	0
   434  02E6                     STR_3:
   435  02E6  3453               	retlw	83	;'S'
   436  02E7  3432               	retlw	50	;'2'
   437  02E8  343A               	retlw	58	;':'
   438  02E9  3400               	retlw	0
   439  02EA                     STR_2:
   440  02EA  3420               	retlw	32	;' '
   441  02EB  3400               	retlw	0
   442  02EA                     
   443                           	psect	cinit
   444  000F                     start_initialization:	
   445                           ; #config settings
   446                           
   447  000F                     __initialization:
   448                           
   449                           ; Clear objects allocated to COMMON
   450  000F  01F9               	clrf	__pbssCOMMON& (0+127)
   451  0010  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   452  0011  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   453                           
   454                           ; Clear objects allocated to BANK0
   455  0012  1283               	bcf	3,5	;RP0=0, select bank0
   456  0013  1303               	bcf	3,6	;RP1=0, select bank0
   457  0014  01AA               	clrf	__pbssBANK0& (0+127)
   458  0015  01AB               	clrf	(__pbssBANK0+1)& (0+127)
   459  0016  01AC               	clrf	(__pbssBANK0+2)& (0+127)
   460  0017  01AD               	clrf	(__pbssBANK0+3)& (0+127)
   461  0018  01AE               	clrf	(__pbssBANK0+4)& (0+127)
   462  0019                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  0019                     __end_of__initialization:
   466  0019  0183               	clrf	3
   467  001A  120A  118A  281D   	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssCOMMON
   470  0079                     __pbssCOMMON:
   471  0079                     _Tercer_digito:
   472  0079                     	ds	1
   473  007A                     _Segundo_digito:
   474  007A                     	ds	1
   475  007B                     _Primer_digito:
   476  007B                     	ds	1
   477                           
   478                           	psect	bssBANK0
   479  002A                     __pbssBANK0:
   480  002A                     _sensor3:
   481  002A                     	ds	1
   482  002B                     _sensor2:
   483  002B                     	ds	1
   484  002C                     _sensor1:
   485  002C                     	ds	1
   486  002D                     _slave2:
   487  002D                     	ds	1
   488  002E                     _slave1:
   489  002E                     	ds	1
   490                           
   491                           	psect	cstackCOMMON
   492  0070                     __pcstackCOMMON:
   493  0070                     ?_setup:
   494  0070                     ?_Lcd_Init:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_Lcd_Clear:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_Lcd_Write_String:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_Decimal:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_Lcd_Write_Char:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_isr:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ??_isr:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_Lcd_Port:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_Lcd_Cmd:	
   522                           ; 1 bytes @ 0x0
   523                           
   524                           
   525                           ; 1 bytes @ 0x0
   526  0070                     	ds	2
   527  0072                     ??_setup:
   528  0072                     ??_Lcd_Port:	
   529                           ; 1 bytes @ 0x2
   530                           
   531  0072                     ?___bmul:	
   532                           ; 1 bytes @ 0x2
   533                           
   534  0072                     ?___awdiv:	
   535                           ; 1 bytes @ 0x2
   536                           
   537  0072                     Lcd_Port@a:	
   538                           ; 2 bytes @ 0x2
   539                           
   540  0072                     ___bmul@multiplicand:	
   541                           ; 1 bytes @ 0x2
   542                           
   543  0072                     ___awdiv@divisor:	
   544                           ; 1 bytes @ 0x2
   545                           
   546                           
   547                           ; 2 bytes @ 0x2
   548  0072                     	ds	1
   549  0073                     ??_Lcd_Write_Char:
   550  0073                     ??_Lcd_Cmd:	
   551                           ; 1 bytes @ 0x3
   552                           
   553  0073                     ??___bmul:	
   554                           ; 1 bytes @ 0x3
   555                           
   556                           
   557                           ; 1 bytes @ 0x3
   558  0073                     	ds	1
   559  0074                     Lcd_Write_Char@a:
   560  0074                     ___bmul@product:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     ___awdiv@dividend:	
   564                           ; 1 bytes @ 0x4
   565                           
   566                           
   567                           ; 2 bytes @ 0x4
   568  0074                     	ds	1
   569  0075                     Lcd_Cmd@a:
   570  0075                     Lcd_Write_Char@temp:	
   571                           ; 1 bytes @ 0x5
   572                           
   573  0075                     ___bmul@multiplier:	
   574                           ; 1 bytes @ 0x5
   575                           
   576                           
   577                           ; 1 bytes @ 0x5
   578  0075                     	ds	1
   579  0076                     ??_Lcd_Init:
   580  0076                     ??_Lcd_Clear:	
   581                           ; 1 bytes @ 0x6
   582                           
   583  0076                     ?_Lcd_Set_Cursor:	
   584                           ; 1 bytes @ 0x6
   585                           
   586  0076                     ??___awdiv:	
   587                           ; 1 bytes @ 0x6
   588                           
   589  0076                     Lcd_Set_Cursor@b:	
   590                           ; 1 bytes @ 0x6
   591                           
   592  0076                     Lcd_Write_Char@y:	
   593                           ; 1 bytes @ 0x6
   594                           
   595                           
   596                           ; 1 bytes @ 0x6
   597  0076                     	ds	1
   598  0077                     ??_Lcd_Set_Cursor:
   599  0077                     ??_Lcd_Write_String:	
   600                           ; 1 bytes @ 0x7
   601                           
   602  0077                     Decimal@variable:	
   603                           ; 1 bytes @ 0x7
   604                           
   605                           
   606                           ; 1 bytes @ 0x7
   607  0077                     	ds	1
   608  0078                     Decimal@valor:
   609                           
   610                           ; 1 bytes @ 0x8
   611  0078                     	ds	1
   612                           
   613                           	psect	cstackBANK0
   614  0020                     __pcstackBANK0:
   615  0020                     Lcd_Set_Cursor@a:
   616  0020                     ___awdiv@counter:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0020                     Lcd_Write_String@i:	
   620                           ; 1 bytes @ 0x0
   621                           
   622                           
   623                           ; 2 bytes @ 0x0
   624  0020                     	ds	1
   625  0021                     Lcd_Set_Cursor@z:
   626  0021                     ___awdiv@sign:	
   627                           ; 1 bytes @ 0x1
   628                           
   629                           
   630                           ; 1 bytes @ 0x1
   631  0021                     	ds	1
   632  0022                     Lcd_Set_Cursor@y:
   633  0022                     Lcd_Write_String@a:	
   634                           ; 1 bytes @ 0x2
   635                           
   636  0022                     ___awdiv@quotient:	
   637                           ; 1 bytes @ 0x2
   638                           
   639                           
   640                           ; 2 bytes @ 0x2
   641  0022                     	ds	1
   642  0023                     Lcd_Set_Cursor@temp:
   643                           
   644                           ; 1 bytes @ 0x3
   645  0023                     	ds	1
   646  0024                     ??_Decimal:
   647                           
   648                           ; 1 bytes @ 0x4
   649  0024                     	ds	3
   650  0027                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x7
   653  0027                     	ds	3
   654                           
   655                           	psect	maintext
   656  001D                     __pmaintext:	
   657 ;;
   658 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   659 ;;
   660 ;; *************** function _main *****************
   661 ;; Defined at:
   662 ;;		line 79 in file "master_main.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : B00/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       3       0       0       0
   679 ;;      Totals:         0       3       0       0       0
   680 ;;Total ram usage:        3 bytes
   681 ;; Hardware stack levels required when called:    4
   682 ;; This function calls:
   683 ;;		_Decimal
   684 ;;		_Lcd_Clear
   685 ;;		_Lcd_Init
   686 ;;		_Lcd_Set_Cursor
   687 ;;		_Lcd_Write_Char
   688 ;;		_Lcd_Write_String
   689 ;;		_setup
   690 ;; This function is called by:
   691 ;;		Startup code after reset
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695                           
   696                           ;psect for function _main
   697  001D                     _main:
   698  001D                     l1373:	
   699                           ;incstack = 0
   700                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   701                           
   702  001D  120A  118A  22A0  120A  118A  	fcall	_setup
   703  0022  120A  118A  2213  120A  118A  	fcall	_Lcd_Init
   704  0027                     l65:
   705                           
   706                           ;master_main.c: 115:         Lcd_Clear();
   707  0027  120A  118A  2301  120A  118A  	fcall	_Lcd_Clear
   708                           
   709                           ;master_main.c: 116:         Lcd_Set_Cursor(1,1);
   710  002C  01F6               	clrf	Lcd_Set_Cursor@b
   711  002D  0AF6               	incf	Lcd_Set_Cursor@b,f
   712  002E  3001               	movlw	1
   713  002F  120A  118A  21BB  120A  118A  	fcall	_Lcd_Set_Cursor
   714  0034                     l1375:
   715                           
   716                           ;master_main.c: 117:         Lcd_Write_String("S1:");
   717  0034  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   718  0035  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   719  003A                     l1377:
   720                           
   721                           ;master_main.c: 118:         Lcd_Write_String(" ");
   722  003A  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   723  003B  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   724  0040                     l1379:
   725                           
   726                           ;master_main.c: 119:         Lcd_Write_String("S2:");
   727  0040  300D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   728  0041  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   729  0046                     l1381:
   730                           
   731                           ;master_main.c: 120:         Lcd_Write_String(" ");
   732  0046  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   733  0047  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   734  004C                     l1383:
   735                           
   736                           ;master_main.c: 121:         Lcd_Write_String("OP1");
   737  004C  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   738  004D  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   739  0052                     l1385:
   740                           
   741                           ;master_main.c: 122:         Lcd_Write_String(" ");
   742  0052  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   743  0053  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   744  0058                     l1387:
   745                           
   746                           ;master_main.c: 123:         Lcd_Write_String("OP2");
   747  0058  3005               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   748  0059  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   749  005E                     l1389:
   750                           
   751                           ;master_main.c: 125:         Lcd_Set_Cursor(2,1);
   752  005E  01F6               	clrf	Lcd_Set_Cursor@b
   753  005F  0AF6               	incf	Lcd_Set_Cursor@b,f
   754  0060  3002               	movlw	2
   755  0061  120A  118A  21BB  120A  118A  	fcall	_Lcd_Set_Cursor
   756  0066                     l1391:
   757                           
   758                           ;master_main.c: 126:         Decimal(255);
   759  0066  30FF               	movlw	255
   760  0067  120A  118A  2154  120A  118A  	fcall	_Decimal
   761  006C                     l1393:
   762                           
   763                           ;master_main.c: 127:         Lcd_Write_Char(Primer_digito);
   764  006C  087B               	movf	_Primer_digito,w
   765  006D  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   766  0072                     l1395:
   767                           
   768                           ;master_main.c: 128:         Lcd_Write_Char(Segundo_digito);
   769  0072  087A               	movf	_Segundo_digito,w
   770  0073  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   771  0078                     l1397:
   772                           
   773                           ;master_main.c: 129:         Lcd_Write_Char(Tercer_digito);
   774  0078  0879               	movf	_Tercer_digito,w
   775  0079  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   776                           
   777                           ;master_main.c: 130:         Lcd_Write_String(" ");
   778  007E  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   779  007F  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   780  0084                     l1399:
   781                           
   782                           ;master_main.c: 131:         Decimal(40);
   783  0084  3028               	movlw	40
   784  0085  120A  118A  2154  120A  118A  	fcall	_Decimal
   785  008A                     l1401:
   786                           
   787                           ;master_main.c: 132:         Lcd_Write_Char(Primer_digito);
   788  008A  087B               	movf	_Primer_digito,w
   789  008B  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   790  0090                     l1403:
   791                           
   792                           ;master_main.c: 133:         Lcd_Write_Char(Segundo_digito);
   793  0090  087A               	movf	_Segundo_digito,w
   794  0091  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   795  0096                     l1405:
   796                           
   797                           ;master_main.c: 134:         Lcd_Write_Char(Tercer_digito);
   798  0096  0879               	movf	_Tercer_digito,w
   799  0097  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   800                           
   801                           ;master_main.c: 135:         Lcd_Write_String(" ");
   802  009C  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   803  009D  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   804  00A2                     l1407:
   805                           
   806                           ;master_main.c: 136:         Decimal(80);
   807  00A2  3050               	movlw	80
   808  00A3  120A  118A  2154  120A  118A  	fcall	_Decimal
   809  00A8                     l1409:
   810                           
   811                           ;master_main.c: 137:         Lcd_Write_Char(Primer_digito);
   812  00A8  087B               	movf	_Primer_digito,w
   813  00A9  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   814  00AE                     l1411:
   815                           
   816                           ;master_main.c: 138:         Lcd_Write_Char(Segundo_digito);
   817  00AE  087A               	movf	_Segundo_digito,w
   818  00AF  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   819  00B4                     l1413:
   820                           
   821                           ;master_main.c: 139:         Lcd_Write_Char(Tercer_digito);
   822  00B4  0879               	movf	_Tercer_digito,w
   823  00B5  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   824                           
   825                           ;master_main.c: 140:         Lcd_Write_String(" ");
   826  00BA  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   827  00BB  120A  118A  225A  120A  118A  	fcall	_Lcd_Write_String
   828  00C0                     l1415:
   829                           
   830                           ;master_main.c: 141:         Decimal(10);
   831  00C0  300A               	movlw	10
   832  00C1  120A  118A  2154  120A  118A  	fcall	_Decimal
   833  00C6                     l1417:
   834                           
   835                           ;master_main.c: 142:         Lcd_Write_Char(Primer_digito);
   836  00C6  087B               	movf	_Primer_digito,w
   837  00C7  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   838  00CC                     l1419:
   839                           
   840                           ;master_main.c: 143:         Lcd_Write_Char(Segundo_digito);
   841  00CC  087A               	movf	_Segundo_digito,w
   842  00CD  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   843  00D2                     l1421:
   844                           
   845                           ;master_main.c: 144:         Lcd_Write_Char(Tercer_digito);
   846  00D2  0879               	movf	_Tercer_digito,w
   847  00D3  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
   848  00D8                     l1423:
   849                           
   850                           ;master_main.c: 145:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   851  00D8  3015               	movlw	21
   852  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   853  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   854  00DB  00A9               	movwf	??_main+2
   855  00DC  304B               	movlw	75
   856  00DD  00A8               	movwf	??_main+1
   857  00DE  30BD               	movlw	189
   858  00DF  00A7               	movwf	??_main
   859  00E0                     u567:
   860  00E0  0BA7               	decfsz	??_main,f
   861  00E1  28E0               	goto	u567
   862  00E2  0BA8               	decfsz	??_main+1,f
   863  00E3  28E0               	goto	u567
   864  00E4  0BA9               	decfsz	??_main+2,f
   865  00E5  28E0               	goto	u567
   866  00E6  28E7               	nop2
   867  00E7  2827               	goto	l65
   868  00E8  120A  118A  280C   	ljmp	start
   869  00EB                     __end_of_main:
   870                           
   871                           	psect	text1
   872  02A0                     __ptext1:	
   873 ;; *************** function _setup *****************
   874 ;; Defined at:
   875 ;;		line 180 in file "master_main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   889 ;;      Params:         0       0       0       0       0
   890 ;;      Locals:         0       0       0       0       0
   891 ;;      Temps:          0       0       0       0       0
   892 ;;      Totals:         0       0       0       0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           
   904                           ;psect for function _setup
   905  02A0                     _setup:
   906  02A0                     l849:	
   907                           ;incstack = 0
   908                           ; Regs used in _setup: [wreg+status,2]
   909                           
   910                           
   911                           ;master_main.c: 182:     OSCCONbits.IRCF2 = 1;
   912  02A0  1683               	bsf	3,5	;RP0=1, select bank1
   913  02A1  1303               	bcf	3,6	;RP1=0, select bank1
   914  02A2  170F               	bsf	15,6	;volatile
   915                           
   916                           ;master_main.c: 183:     OSCCONbits.IRCF1 = 1;
   917  02A3  168F               	bsf	15,5	;volatile
   918                           
   919                           ;master_main.c: 184:     OSCCONbits.IRCF0 = 1;
   920  02A4  160F               	bsf	15,4	;volatile
   921                           
   922                           ;master_main.c: 185:     OSCCONbits.SCS = 1;
   923  02A5  140F               	bsf	15,0	;volatile
   924  02A6                     l851:
   925                           
   926                           ;master_main.c: 188:     ANSELH = 0x00;
   927  02A6  1683               	bsf	3,5	;RP0=1, select bank3
   928  02A7  1703               	bsf	3,6	;RP1=1, select bank3
   929  02A8  0189               	clrf	9	;volatile
   930                           
   931                           ;master_main.c: 189:     ANSEL = 0x00;
   932  02A9  0188               	clrf	8	;volatile
   933                           
   934                           ;master_main.c: 191:     TRISA = 0x00;
   935  02AA  1683               	bsf	3,5	;RP0=1, select bank1
   936  02AB  1303               	bcf	3,6	;RP1=0, select bank1
   937  02AC  0185               	clrf	5	;volatile
   938                           
   939                           ;master_main.c: 192:     TRISB = 0x00;
   940  02AD  0186               	clrf	6	;volatile
   941  02AE                     l853:
   942                           
   943                           ;master_main.c: 193:     TRISC = 0x80;
   944  02AE  3080               	movlw	128
   945  02AF  0087               	movwf	7	;volatile
   946  02B0                     l855:
   947                           
   948                           ;master_main.c: 194:     TRISD = 0x00;
   949  02B0  0188               	clrf	8	;volatile
   950  02B1                     l857:
   951                           
   952                           ;master_main.c: 195:     TRISE = 0x00;
   953  02B1  0189               	clrf	9	;volatile
   954  02B2                     l859:
   955                           
   956                           ;master_main.c: 197:     PORTA = 0x00;
   957  02B2  1283               	bcf	3,5	;RP0=0, select bank0
   958  02B3  1303               	bcf	3,6	;RP1=0, select bank0
   959  02B4  0185               	clrf	5	;volatile
   960  02B5                     l861:
   961                           
   962                           ;master_main.c: 198:     PORTB = 0x00;
   963  02B5  0186               	clrf	6	;volatile
   964  02B6                     l863:
   965                           
   966                           ;master_main.c: 199:     PORTC = 0x00;
   967  02B6  0187               	clrf	7	;volatile
   968  02B7                     l865:
   969                           
   970                           ;master_main.c: 200:     PORTD = 0x00;
   971  02B7  0188               	clrf	8	;volatile
   972  02B8                     l867:
   973                           
   974                           ;master_main.c: 201:     PORTE = 0x00;
   975  02B8  0189               	clrf	9	;volatile
   976  02B9                     l79:
   977  02B9  0008               	return
   978  02BA                     __end_of_setup:
   979                           
   980                           	psect	text2
   981  025A                     __ptext2:	
   982 ;; *************** function _Lcd_Write_String *****************
   983 ;; Defined at:
   984 ;;		line 77 in file "LCD.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  a               1    wreg     PTR unsigned char 
   987 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(4), 
   988 ;;		 -> STR_6(2), STR_5(4), STR_4(2), STR_3(4), 
   989 ;;		 -> STR_2(2), STR_1(4), 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;  a               1    2[BANK0 ] PTR unsigned char 
   992 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(4), 
   993 ;;		 -> STR_6(2), STR_5(4), STR_4(2), STR_3(4), 
   994 ;;		 -> STR_2(2), STR_1(4), 
   995 ;;  i               2    0[BANK0 ] int 
   996 ;; Return value:  Size  Location     Type
   997 ;;                  1    wreg      void 
   998 ;; Registers used:
   999 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1000 ;; Tracked objects:
  1001 ;;		On entry : 0/0
  1002 ;;		On exit  : 0/0
  1003 ;;		Unchanged: 0/0
  1004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1005 ;;      Params:         0       0       0       0       0
  1006 ;;      Locals:         0       3       0       0       0
  1007 ;;      Temps:          0       0       0       0       0
  1008 ;;      Totals:         0       3       0       0       0
  1009 ;;Total ram usage:        3 bytes
  1010 ;; Hardware stack levels used:    1
  1011 ;; Hardware stack levels required when called:    3
  1012 ;; This function calls:
  1013 ;;		_Lcd_Write_Char
  1014 ;; This function is called by:
  1015 ;;		_main
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           
  1020                           ;psect for function _Lcd_Write_String
  1021  025A                     _Lcd_Write_String:
  1022                           
  1023                           ;incstack = 0
  1024                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1025                           ;Lcd_Write_String@a stored from wreg
  1026  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1027  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1028  025C  00A2               	movwf	Lcd_Write_String@a
  1029  025D                     l1349:
  1030                           
  1031                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  1032  025D  01A0               	clrf	Lcd_Write_String@i
  1033  025E  01A1               	clrf	Lcd_Write_String@i+1
  1034  025F  2A75               	goto	l1355
  1035  0260                     l1351:
  1036                           
  1037                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  1038  0260  0820               	movf	Lcd_Write_String@i,w
  1039  0261  0722               	addwf	Lcd_Write_String@a,w
  1040  0262  0084               	movwf	4
  1041  0263  120A  118A  22D4  120A  118A  	fcall	stringdir
  1042  0268  120A  118A  2283  120A  118A  	fcall	_Lcd_Write_Char
  1043  026D                     l1353:
  1044  026D  3001               	movlw	1
  1045  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1046  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1047  0270  07A0               	addwf	Lcd_Write_String@i,f
  1048  0271  1803               	skipnc
  1049  0272  0AA1               	incf	Lcd_Write_String@i+1,f
  1050  0273  3000               	movlw	0
  1051  0274  07A1               	addwf	Lcd_Write_String@i+1,f
  1052  0275                     l1355:
  1053  0275  0820               	movf	Lcd_Write_String@i,w
  1054  0276  0722               	addwf	Lcd_Write_String@a,w
  1055  0277  0084               	movwf	4
  1056  0278  120A  118A  22D4  120A  118A  	fcall	stringdir
  1057  027D  3A00               	xorlw	0
  1058  027E  1D03               	skipz
  1059  027F  2A81               	goto	u551
  1060  0280  2A82               	goto	u550
  1061  0281                     u551:
  1062  0281  2A60               	goto	l1351
  1063  0282                     u550:
  1064  0282                     l114:
  1065  0282  0008               	return
  1066  0283                     __end_of_Lcd_Write_String:
  1067                           
  1068                           	psect	text3
  1069  0283                     __ptext3:	
  1070 ;; *************** function _Lcd_Write_Char *****************
  1071 ;; Defined at:
  1072 ;;		line 65 in file "LCD.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;  a               1    wreg     unsigned char 
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  a               1    4[COMMON] unsigned char 
  1077 ;;  y               1    6[COMMON] unsigned char 
  1078 ;;  temp            1    5[COMMON] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         3       0       0       0       0
  1090 ;;      Temps:          1       0       0       0       0
  1091 ;;      Totals:         4       0       0       0       0
  1092 ;;Total ram usage:        4 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    2
  1095 ;; This function calls:
  1096 ;;		_Lcd_Port
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;;		_Lcd_Write_String
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _Lcd_Write_Char
  1105  0283                     _Lcd_Write_Char:
  1106                           
  1107                           ;incstack = 0
  1108                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1109                           ;Lcd_Write_Char@a stored from wreg
  1110  0283  00F4               	movwf	Lcd_Write_Char@a
  1111  0284                     l1237:
  1112                           
  1113                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  1114  0284  0874               	movf	Lcd_Write_Char@a,w
  1115  0285  00F3               	movwf	??_Lcd_Write_Char
  1116  0286  0873               	movf	??_Lcd_Write_Char,w
  1117  0287  00F5               	movwf	Lcd_Write_Char@temp
  1118                           
  1119                           ;LCD.c: 68:     y = temp;
  1120  0288  0875               	movf	Lcd_Write_Char@temp,w
  1121  0289  00F3               	movwf	??_Lcd_Write_Char
  1122  028A  0873               	movf	??_Lcd_Write_Char,w
  1123  028B  00F6               	movwf	Lcd_Write_Char@y
  1124  028C                     l1239:
  1125                           
  1126                           ;LCD.c: 69:     RE0 = 1;
  1127  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1128  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1129  028E  1409               	bsf	9,0	;volatile
  1130  028F                     l1241:
  1131                           
  1132                           ;LCD.c: 70:     Lcd_Port(y);
  1133  028F  0876               	movf	Lcd_Write_Char@y,w
  1134  0290  120A  118A  2317  120A  118A  	fcall	_Lcd_Port
  1135  0295                     l1243:
  1136                           
  1137                           ;LCD.c: 71:     RE1 = 1;
  1138  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1140  0297  1489               	bsf	9,1	;volatile
  1141  0298                     l1245:
  1142                           
  1143                           ;LCD.c: 72:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  1144  0298  300D               	movlw	13
  1145  0299  00F3               	movwf	??_Lcd_Write_Char
  1146  029A                     u577:
  1147  029A  0BF3               	decfsz	??_Lcd_Write_Char,f
  1148  029B  2A9A               	goto	u577
  1149  029C                     l1247:
  1150                           
  1151                           ;LCD.c: 73:     RE1 = 0;
  1152  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1153  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1154  029E  1089               	bcf	9,1	;volatile
  1155  029F                     l108:
  1156  029F  0008               	return
  1157  02A0                     __end_of_Lcd_Write_Char:
  1158                           
  1159                           	psect	text4
  1160  01BB                     __ptext4:	
  1161 ;; *************** function _Lcd_Set_Cursor *****************
  1162 ;; Defined at:
  1163 ;;		line 30 in file "LCD.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;  a               1    wreg     unsigned char 
  1166 ;;  b               1    6[COMMON] unsigned char 
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;  a               1    0[BANK0 ] unsigned char 
  1169 ;;  temp            1    3[BANK0 ] unsigned char 
  1170 ;;  y               1    2[BANK0 ] unsigned char 
  1171 ;;  z               1    1[BANK0 ] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, pclath, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1181 ;;      Params:         1       0       0       0       0
  1182 ;;      Locals:         0       4       0       0       0
  1183 ;;      Temps:          2       0       0       0       0
  1184 ;;      Totals:         3       4       0       0       0
  1185 ;;Total ram usage:        7 bytes
  1186 ;; Hardware stack levels used:    1
  1187 ;; Hardware stack levels required when called:    3
  1188 ;; This function calls:
  1189 ;;		_Lcd_Cmd
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _Lcd_Set_Cursor
  1197  01BB                     _Lcd_Set_Cursor:
  1198                           
  1199                           ;incstack = 0
  1200                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1201                           ;Lcd_Set_Cursor@a stored from wreg
  1202  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1203  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  1204  01BD  00A0               	movwf	Lcd_Set_Cursor@a
  1205  01BE                     l1329:
  1206                           
  1207                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  1208  01BE  0320               	decf	Lcd_Set_Cursor@a,w
  1209  01BF  1D03               	btfss	3,2
  1210  01C0  29C2               	goto	u511
  1211  01C1  29C3               	goto	u510
  1212  01C2                     u511:
  1213  01C2  29E8               	goto	l1339
  1214  01C3                     u510:
  1215  01C3                     l1331:
  1216                           
  1217                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  1218  01C3  0876               	movf	Lcd_Set_Cursor@b,w
  1219  01C4  3E7F               	addlw	127
  1220  01C5  00F7               	movwf	??_Lcd_Set_Cursor
  1221  01C6  0877               	movf	??_Lcd_Set_Cursor,w
  1222  01C7  00A3               	movwf	Lcd_Set_Cursor@temp
  1223                           
  1224                           ;LCD.c: 34:         z = temp >> 4;
  1225  01C8  0823               	movf	Lcd_Set_Cursor@temp,w
  1226  01C9  00F7               	movwf	??_Lcd_Set_Cursor
  1227  01CA  3004               	movlw	4
  1228  01CB                     u525:
  1229  01CB  1003               	clrc
  1230  01CC  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1231  01CD  3EFF               	addlw	-1
  1232  01CE  1D03               	skipz
  1233  01CF  29CB               	goto	u525
  1234  01D0  0877               	movf	??_Lcd_Set_Cursor,w
  1235  01D1  00F8               	movwf	??_Lcd_Set_Cursor+1
  1236  01D2  0878               	movf	??_Lcd_Set_Cursor+1,w
  1237  01D3  00A1               	movwf	Lcd_Set_Cursor@z
  1238  01D4                     l1333:
  1239                           
  1240                           ;LCD.c: 35:         y = temp & 0x0F;
  1241  01D4  0823               	movf	Lcd_Set_Cursor@temp,w
  1242  01D5  390F               	andlw	15
  1243  01D6  00F7               	movwf	??_Lcd_Set_Cursor
  1244  01D7  0877               	movf	??_Lcd_Set_Cursor,w
  1245  01D8  00A2               	movwf	Lcd_Set_Cursor@y
  1246  01D9                     l1335:
  1247                           
  1248                           ;LCD.c: 36:         Lcd_Cmd(z);
  1249  01D9  0821               	movf	Lcd_Set_Cursor@z,w
  1250  01DA  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1251  01DF                     l1337:
  1252                           
  1253                           ;LCD.c: 37:         Lcd_Cmd(y);
  1254  01DF  1283               	bcf	3,5	;RP0=0, select bank0
  1255  01E0  1303               	bcf	3,6	;RP1=0, select bank0
  1256  01E1  0822               	movf	Lcd_Set_Cursor@y,w
  1257  01E2  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1258                           
  1259                           ;LCD.c: 38:     } else if (a == 2) {
  1260  01E7  2A12               	goto	l102
  1261  01E8                     l1339:
  1262  01E8  3002               	movlw	2
  1263  01E9  0620               	xorwf	Lcd_Set_Cursor@a,w
  1264  01EA  1D03               	btfss	3,2
  1265  01EB  29ED               	goto	u531
  1266  01EC  29EE               	goto	u530
  1267  01ED                     u531:
  1268  01ED  2A12               	goto	l102
  1269  01EE                     u530:
  1270  01EE                     l1341:
  1271                           
  1272                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  1273  01EE  0876               	movf	Lcd_Set_Cursor@b,w
  1274  01EF  3EBF               	addlw	191
  1275  01F0  00F7               	movwf	??_Lcd_Set_Cursor
  1276  01F1  0877               	movf	??_Lcd_Set_Cursor,w
  1277  01F2  00A3               	movwf	Lcd_Set_Cursor@temp
  1278                           
  1279                           ;LCD.c: 40:         z = temp >> 4;
  1280  01F3  0823               	movf	Lcd_Set_Cursor@temp,w
  1281  01F4  00F7               	movwf	??_Lcd_Set_Cursor
  1282  01F5  3004               	movlw	4
  1283  01F6                     u545:
  1284  01F6  1003               	clrc
  1285  01F7  0CF7               	rrf	??_Lcd_Set_Cursor,f
  1286  01F8  3EFF               	addlw	-1
  1287  01F9  1D03               	skipz
  1288  01FA  29F6               	goto	u545
  1289  01FB  0877               	movf	??_Lcd_Set_Cursor,w
  1290  01FC  00F8               	movwf	??_Lcd_Set_Cursor+1
  1291  01FD  0878               	movf	??_Lcd_Set_Cursor+1,w
  1292  01FE  00A1               	movwf	Lcd_Set_Cursor@z
  1293  01FF                     l1343:
  1294                           
  1295                           ;LCD.c: 41:         y = temp & 0xF0;
  1296  01FF  0823               	movf	Lcd_Set_Cursor@temp,w
  1297  0200  39F0               	andlw	240
  1298  0201  00F7               	movwf	??_Lcd_Set_Cursor
  1299  0202  0877               	movf	??_Lcd_Set_Cursor,w
  1300  0203  00A2               	movwf	Lcd_Set_Cursor@y
  1301  0204                     l1345:
  1302                           
  1303                           ;LCD.c: 42:         Lcd_Cmd(z);
  1304  0204  0821               	movf	Lcd_Set_Cursor@z,w
  1305  0205  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1306  020A                     l1347:
  1307                           
  1308                           ;LCD.c: 43:         Lcd_Cmd(y);
  1309  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1310  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1311  020C  0822               	movf	Lcd_Set_Cursor@y,w
  1312  020D  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1313  0212                     l102:
  1314  0212  0008               	return
  1315  0213                     __end_of_Lcd_Set_Cursor:
  1316                           
  1317                           	psect	text5
  1318  0213                     __ptext5:	
  1319 ;; *************** function _Lcd_Init *****************
  1320 ;; Defined at:
  1321 ;;		line 47 in file "LCD.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0
  1338 ;;      Totals:         2       0       0       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    3
  1342 ;; This function calls:
  1343 ;;		_Lcd_Cmd
  1344 ;;		_Lcd_Port
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _Lcd_Init
  1352  0213                     _Lcd_Init:
  1353  0213                     l1317:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1356                           
  1357                           
  1358                           ;LCD.c: 48:     Lcd_Port(0x00);
  1359  0213  3000               	movlw	0
  1360  0214  120A  118A  2317  120A  118A  	fcall	_Lcd_Port
  1361  0219                     l1319:
  1362                           
  1363                           ;LCD.c: 49:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1364  0219  301A               	movlw	26
  1365  021A  00F7               	movwf	??_Lcd_Init+1
  1366  021B  30F8               	movlw	248
  1367  021C  00F6               	movwf	??_Lcd_Init
  1368  021D                     u587:
  1369  021D  0BF6               	decfsz	??_Lcd_Init,f
  1370  021E  2A1D               	goto	u587
  1371  021F  0BF7               	decfsz	??_Lcd_Init+1,f
  1372  0220  2A1D               	goto	u587
  1373  0221  0000               	nop
  1374  0222                     l1321:
  1375                           
  1376                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  1377  0222  3030               	movlw	48
  1378  0223  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1379                           
  1380                           ;LCD.c: 51:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1381  0228  3007               	movlw	7
  1382  0229  00F7               	movwf	??_Lcd_Init+1
  1383  022A  307D               	movlw	125
  1384  022B  00F6               	movwf	??_Lcd_Init
  1385  022C                     u597:
  1386  022C  0BF6               	decfsz	??_Lcd_Init,f
  1387  022D  2A2C               	goto	u597
  1388  022E  0BF7               	decfsz	??_Lcd_Init+1,f
  1389  022F  2A2C               	goto	u597
  1390  0230                     l1323:
  1391                           
  1392                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  1393  0230  3030               	movlw	48
  1394  0231  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1395  0236                     l1325:
  1396                           
  1397                           ;LCD.c: 53:     _delay((unsigned long)((200)*(4000000/4000000.0)));
  1398  0236  3042               	movlw	66
  1399  0237  00F6               	movwf	??_Lcd_Init
  1400  0238                     u607:
  1401  0238  0BF6               	decfsz	??_Lcd_Init,f
  1402  0239  2A38               	goto	u607
  1403  023A  0000               	nop
  1404                           
  1405                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  1406  023B  3030               	movlw	48
  1407  023C  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1408                           
  1409                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  1410  0241  303C               	movlw	60
  1411  0242  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1412                           
  1413                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  1414  0247  3008               	movlw	8
  1415  0248  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1416                           
  1417                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  1418  024D  3001               	movlw	1
  1419  024E  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1420                           
  1421                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  1422  0253  3006               	movlw	6
  1423  0254  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1424  0259                     l105:
  1425  0259  0008               	return
  1426  025A                     __end_of_Lcd_Init:
  1427                           
  1428                           	psect	text6
  1429  0301                     __ptext6:	
  1430 ;; *************** function _Lcd_Clear *****************
  1431 ;; Defined at:
  1432 ;;		line 25 in file "LCD.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, pclath, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0
  1449 ;;      Totals:         0       0       0       0       0
  1450 ;;Total ram usage:        0 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    3
  1453 ;; This function calls:
  1454 ;;		_Lcd_Cmd
  1455 ;; This function is called by:
  1456 ;;		_main
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _Lcd_Clear
  1462  0301                     _Lcd_Clear:
  1463  0301                     l1327:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1466                           
  1467                           
  1468                           ;LCD.c: 26:     Lcd_Cmd(0);
  1469  0301  3000               	movlw	0
  1470  0302  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1471                           
  1472                           ;LCD.c: 27:     Lcd_Cmd(1);
  1473  0307  3001               	movlw	1
  1474  0308  120A  118A  22BA  120A  118A  	fcall	_Lcd_Cmd
  1475  030D                     l96:
  1476  030D  0008               	return
  1477  030E                     __end_of_Lcd_Clear:
  1478                           
  1479                           	psect	text7
  1480  02BA                     __ptext7:	
  1481 ;; *************** function _Lcd_Cmd *****************
  1482 ;; Defined at:
  1483 ;;		line 17 in file "LCD.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  a               1    wreg     unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  a               1    5[COMMON] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, pclath, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         1       0       0       0       0
  1499 ;;      Temps:          2       0       0       0       0
  1500 ;;      Totals:         3       0       0       0       0
  1501 ;;Total ram usage:        3 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    2
  1504 ;; This function calls:
  1505 ;;		_Lcd_Port
  1506 ;; This function is called by:
  1507 ;;		_Lcd_Clear
  1508 ;;		_Lcd_Set_Cursor
  1509 ;;		_Lcd_Init
  1510 ;;		_Lcd_Shift_Right
  1511 ;;		_Lcd_Shift_Left
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _Lcd_Cmd
  1517  02BA                     _Lcd_Cmd:
  1518                           
  1519                           ;incstack = 0
  1520                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1521                           ;Lcd_Cmd@a stored from wreg
  1522  02BA  00F5               	movwf	Lcd_Cmd@a
  1523  02BB                     l1249:
  1524                           
  1525                           ;LCD.c: 18:     RE0 = 0;
  1526  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1527  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1528  02BD  1009               	bcf	9,0	;volatile
  1529  02BE                     l1251:
  1530                           
  1531                           ;LCD.c: 19:     Lcd_Port(a);
  1532  02BE  0875               	movf	Lcd_Cmd@a,w
  1533  02BF  120A  118A  2317  120A  118A  	fcall	_Lcd_Port
  1534  02C4                     l1253:
  1535                           
  1536                           ;LCD.c: 20:     RE1 = 1;
  1537  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  1538  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  1539  02C6  1489               	bsf	9,1	;volatile
  1540  02C7                     l1255:
  1541                           
  1542                           ;LCD.c: 21:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1543  02C7  3006               	movlw	6
  1544  02C8  00F4               	movwf	??_Lcd_Cmd+1
  1545  02C9  3030               	movlw	48
  1546  02CA  00F3               	movwf	??_Lcd_Cmd
  1547  02CB                     u617:
  1548  02CB  0BF3               	decfsz	??_Lcd_Cmd,f
  1549  02CC  2ACB               	goto	u617
  1550  02CD  0BF4               	decfsz	??_Lcd_Cmd+1,f
  1551  02CE  2ACB               	goto	u617
  1552  02CF  0000               	nop
  1553  02D0                     l1257:
  1554                           
  1555                           ;LCD.c: 22:     RE1 = 0;
  1556  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1558  02D2  1089               	bcf	9,1	;volatile
  1559  02D3                     l93:
  1560  02D3  0008               	return
  1561  02D4                     __end_of_Lcd_Cmd:
  1562                           
  1563                           	psect	text8
  1564  0317                     __ptext8:	
  1565 ;; *************** function _Lcd_Port *****************
  1566 ;; Defined at:
  1567 ;;		line 12 in file "LCD.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  a               1    wreg     unsigned char 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  a               1    2[COMMON] unsigned char 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1581 ;;      Params:         0       0       0       0       0
  1582 ;;      Locals:         1       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0
  1584 ;;      Totals:         1       0       0       0       0
  1585 ;;Total ram usage:        1 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; Hardware stack levels required when called:    1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_Lcd_Cmd
  1592 ;;		_Lcd_Init
  1593 ;;		_Lcd_Write_Char
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _Lcd_Port
  1599  0317                     _Lcd_Port:
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _Lcd_Port: [wreg]
  1603                           ;Lcd_Port@a stored from wreg
  1604  0317  00F2               	movwf	Lcd_Port@a
  1605  0318                     l1235:
  1606                           
  1607                           ;LCD.c: 13:     PORTD = a;
  1608  0318  0872               	movf	Lcd_Port@a,w
  1609  0319  1283               	bcf	3,5	;RP0=0, select bank0
  1610  031A  1303               	bcf	3,6	;RP1=0, select bank0
  1611  031B  0088               	movwf	8	;volatile
  1612  031C                     l90:
  1613  031C  0008               	return
  1614  031D                     __end_of_Lcd_Port:
  1615                           
  1616                           	psect	text9
  1617  0154                     __ptext9:	
  1618 ;; *************** function _Decimal *****************
  1619 ;; Defined at:
  1620 ;;		line 162 in file "master_main.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  variable        1    wreg     unsigned char 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  variable        1    7[COMMON] unsigned char 
  1625 ;;  valor           1    8[COMMON] unsigned char 
  1626 ;; Return value:  Size  Location     Type
  1627 ;;                  1    wreg      void 
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         2       0       0       0       0
  1637 ;;      Temps:          0       3       0       0       0
  1638 ;;      Totals:         2       3       0       0       0
  1639 ;;Total ram usage:        5 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    2
  1642 ;; This function calls:
  1643 ;;		___awdiv
  1644 ;;		___bmul
  1645 ;; This function is called by:
  1646 ;;		_main
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           
  1651                           ;psect for function _Decimal
  1652  0154                     _Decimal:
  1653                           
  1654                           ;incstack = 0
  1655                           ; Regs used in _Decimal: [wreg+status,2+status,0+pclath+cstack]
  1656                           ;Decimal@variable stored from wreg
  1657  0154  00F7               	movwf	Decimal@variable
  1658  0155                     l1357:
  1659                           
  1660                           ;master_main.c: 163:     uint8_t valor;;master_main.c: 164:     valor = variable;
  1661  0155  0877               	movf	Decimal@variable,w
  1662  0156  1283               	bcf	3,5	;RP0=0, select bank0
  1663  0157  1303               	bcf	3,6	;RP1=0, select bank0
  1664  0158  00A4               	movwf	??_Decimal
  1665  0159  0824               	movf	??_Decimal,w
  1666  015A  00F8               	movwf	Decimal@valor
  1667  015B                     l1359:
  1668                           
  1669                           ;master_main.c: 165:     Primer_digito = (valor/100) ;
  1670  015B  3064               	movlw	100
  1671  015C  00F2               	movwf	___awdiv@divisor
  1672  015D  3000               	movlw	0
  1673  015E  00F3               	movwf	___awdiv@divisor+1
  1674  015F  0878               	movf	Decimal@valor,w
  1675  0160  00A4               	movwf	??_Decimal
  1676  0161  01A5               	clrf	??_Decimal+1
  1677  0162  0824               	movf	??_Decimal,w
  1678  0163  00F4               	movwf	___awdiv@dividend
  1679  0164  0825               	movf	??_Decimal+1,w
  1680  0165  00F5               	movwf	___awdiv@dividend+1
  1681  0166  120A  118A  20EB  120A  118A  	fcall	___awdiv
  1682  016B  0872               	movf	?___awdiv,w
  1683  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1684  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1685  016E  00A6               	movwf	??_Decimal+2
  1686  016F  0826               	movf	??_Decimal+2,w
  1687  0170  00FB               	movwf	_Primer_digito
  1688  0171                     l1361:
  1689                           
  1690                           ;master_main.c: 166:     valor = (valor - (Primer_digito*100));
  1691  0171  309C               	movlw	156
  1692  0172  00A4               	movwf	??_Decimal
  1693  0173  0824               	movf	??_Decimal,w
  1694  0174  00F2               	movwf	___bmul@multiplicand
  1695  0175  087B               	movf	_Primer_digito,w
  1696  0176  120A  118A  22EC  120A  118A  	fcall	___bmul
  1697  017B  0778               	addwf	Decimal@valor,w
  1698  017C  1283               	bcf	3,5	;RP0=0, select bank0
  1699  017D  1303               	bcf	3,6	;RP1=0, select bank0
  1700  017E  00A5               	movwf	??_Decimal+1
  1701  017F  0825               	movf	??_Decimal+1,w
  1702  0180  00F8               	movwf	Decimal@valor
  1703  0181                     l1363:
  1704                           
  1705                           ;master_main.c: 167:     Segundo_digito = (valor/10);
  1706  0181  300A               	movlw	10
  1707  0182  00F2               	movwf	___awdiv@divisor
  1708  0183  3000               	movlw	0
  1709  0184  00F3               	movwf	___awdiv@divisor+1
  1710  0185  0878               	movf	Decimal@valor,w
  1711  0186  00A4               	movwf	??_Decimal
  1712  0187  01A5               	clrf	??_Decimal+1
  1713  0188  0824               	movf	??_Decimal,w
  1714  0189  00F4               	movwf	___awdiv@dividend
  1715  018A  0825               	movf	??_Decimal+1,w
  1716  018B  00F5               	movwf	___awdiv@dividend+1
  1717  018C  120A  118A  20EB  120A  118A  	fcall	___awdiv
  1718  0191  0872               	movf	?___awdiv,w
  1719  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1720  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1721  0194  00A6               	movwf	??_Decimal+2
  1722  0195  0826               	movf	??_Decimal+2,w
  1723  0196  00FA               	movwf	_Segundo_digito
  1724  0197                     l1365:
  1725                           
  1726                           ;master_main.c: 168:     valor = (valor - (Segundo_digito*10));
  1727  0197  30F6               	movlw	246
  1728  0198  00A4               	movwf	??_Decimal
  1729  0199  0824               	movf	??_Decimal,w
  1730  019A  00F2               	movwf	___bmul@multiplicand
  1731  019B  087A               	movf	_Segundo_digito,w
  1732  019C  120A  118A  22EC  120A  118A  	fcall	___bmul
  1733  01A1  0778               	addwf	Decimal@valor,w
  1734  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1735  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1736  01A4  00A5               	movwf	??_Decimal+1
  1737  01A5  0825               	movf	??_Decimal+1,w
  1738  01A6  00F8               	movwf	Decimal@valor
  1739                           
  1740                           ;master_main.c: 169:     Tercer_digito = valor;
  1741  01A7  0878               	movf	Decimal@valor,w
  1742  01A8  00A4               	movwf	??_Decimal
  1743  01A9  0824               	movf	??_Decimal,w
  1744  01AA  00F9               	movwf	_Tercer_digito
  1745  01AB                     l1367:
  1746                           
  1747                           ;master_main.c: 171:     Primer_digito = Primer_digito + 48;
  1748  01AB  087B               	movf	_Primer_digito,w
  1749  01AC  3E30               	addlw	48
  1750  01AD  00A4               	movwf	??_Decimal
  1751  01AE  0824               	movf	??_Decimal,w
  1752  01AF  00FB               	movwf	_Primer_digito
  1753  01B0                     l1369:
  1754                           
  1755                           ;master_main.c: 172:     Segundo_digito = Segundo_digito + 48;
  1756  01B0  087A               	movf	_Segundo_digito,w
  1757  01B1  3E30               	addlw	48
  1758  01B2  00A4               	movwf	??_Decimal
  1759  01B3  0824               	movf	??_Decimal,w
  1760  01B4  00FA               	movwf	_Segundo_digito
  1761  01B5                     l1371:
  1762                           
  1763                           ;master_main.c: 173:     Tercer_digito = Tercer_digito + 48;
  1764  01B5  0879               	movf	_Tercer_digito,w
  1765  01B6  3E30               	addlw	48
  1766  01B7  00A4               	movwf	??_Decimal
  1767  01B8  0824               	movf	??_Decimal,w
  1768  01B9  00F9               	movwf	_Tercer_digito
  1769  01BA                     l76:
  1770  01BA  0008               	return
  1771  01BB                     __end_of_Decimal:
  1772                           
  1773                           	psect	text10
  1774  02EC                     __ptext10:	
  1775 ;; *************** function ___bmul *****************
  1776 ;; Defined at:
  1777 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;  multiplier      1    wreg     unsigned char 
  1780 ;;  multiplicand    1    2[COMMON] unsigned char 
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;  multiplier      1    5[COMMON] unsigned char 
  1783 ;;  product         1    4[COMMON] unsigned char 
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      unsigned char 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2, status,0
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1793 ;;      Params:         1       0       0       0       0
  1794 ;;      Locals:         2       0       0       0       0
  1795 ;;      Temps:          1       0       0       0       0
  1796 ;;      Totals:         4       0       0       0       0
  1797 ;;Total ram usage:        4 bytes
  1798 ;; Hardware stack levels used:    1
  1799 ;; Hardware stack levels required when called:    1
  1800 ;; This function calls:
  1801 ;;		Nothing
  1802 ;; This function is called by:
  1803 ;;		_Decimal
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           
  1808                           ;psect for function ___bmul
  1809  02EC                     ___bmul:
  1810                           
  1811                           ;incstack = 0
  1812                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1813                           ;___bmul@multiplier stored from wreg
  1814  02EC  00F5               	movwf	___bmul@multiplier
  1815  02ED                     l1259:
  1816  02ED  01F4               	clrf	___bmul@product
  1817  02EE                     l1261:
  1818  02EE  1C75               	btfss	___bmul@multiplier,0
  1819  02EF  2AF1               	goto	u391
  1820  02F0  2AF2               	goto	u390
  1821  02F1                     u391:
  1822  02F1  2AF6               	goto	l1265
  1823  02F2                     u390:
  1824  02F2                     l1263:
  1825  02F2  0872               	movf	___bmul@multiplicand,w
  1826  02F3  00F3               	movwf	??___bmul
  1827  02F4  0873               	movf	??___bmul,w
  1828  02F5  07F4               	addwf	___bmul@product,f
  1829  02F6                     l1265:
  1830  02F6  1003               	clrc
  1831  02F7  0DF2               	rlf	___bmul@multiplicand,f
  1832  02F8                     l1267:
  1833  02F8  1003               	clrc
  1834  02F9  0CF5               	rrf	___bmul@multiplier,f
  1835  02FA  0875               	movf	___bmul@multiplier,w
  1836  02FB  1D03               	btfss	3,2
  1837  02FC  2AFE               	goto	u401
  1838  02FD  2AFF               	goto	u400
  1839  02FE                     u401:
  1840  02FE  2AEE               	goto	l1261
  1841  02FF                     u400:
  1842  02FF                     l1269:
  1843  02FF  0874               	movf	___bmul@product,w
  1844  0300                     l287:
  1845  0300  0008               	return
  1846  0301                     __end_of___bmul:
  1847                           
  1848                           	psect	text11
  1849  00EB                     __ptext11:	
  1850 ;; *************** function ___awdiv *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  divisor         2    2[COMMON] int 
  1855 ;;  dividend        2    4[COMMON] int 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  quotient        2    2[BANK0 ] int 
  1858 ;;  sign            1    1[BANK0 ] unsigned char 
  1859 ;;  counter         1    0[BANK0 ] unsigned char 
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  2    2[COMMON] int 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1869 ;;      Params:         4       0       0       0       0
  1870 ;;      Locals:         0       4       0       0       0
  1871 ;;      Temps:          1       0       0       0       0
  1872 ;;      Totals:         5       4       0       0       0
  1873 ;;Total ram usage:        9 bytes
  1874 ;; Hardware stack levels used:    1
  1875 ;; Hardware stack levels required when called:    1
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_Decimal
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function ___awdiv
  1885  00EB                     ___awdiv:
  1886  00EB                     l1273:	
  1887                           ;incstack = 0
  1888                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1889                           
  1890  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1891  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1892  00ED  01A1               	clrf	___awdiv@sign
  1893  00EE                     l1275:
  1894  00EE  1FF3               	btfss	___awdiv@divisor+1,7
  1895  00EF  28F1               	goto	u411
  1896  00F0  28F2               	goto	u410
  1897  00F1                     u411:
  1898  00F1  28F9               	goto	l1281
  1899  00F2                     u410:
  1900  00F2                     l1277:
  1901  00F2  09F2               	comf	___awdiv@divisor,f
  1902  00F3  09F3               	comf	___awdiv@divisor+1,f
  1903  00F4  0AF2               	incf	___awdiv@divisor,f
  1904  00F5  1903               	skipnz
  1905  00F6  0AF3               	incf	___awdiv@divisor+1,f
  1906  00F7                     l1279:
  1907  00F7  01A1               	clrf	___awdiv@sign
  1908  00F8  0AA1               	incf	___awdiv@sign,f
  1909  00F9                     l1281:
  1910  00F9  1FF5               	btfss	___awdiv@dividend+1,7
  1911  00FA  28FC               	goto	u421
  1912  00FB  28FD               	goto	u420
  1913  00FC                     u421:
  1914  00FC  2906               	goto	l1287
  1915  00FD                     u420:
  1916  00FD                     l1283:
  1917  00FD  09F4               	comf	___awdiv@dividend,f
  1918  00FE  09F5               	comf	___awdiv@dividend+1,f
  1919  00FF  0AF4               	incf	___awdiv@dividend,f
  1920  0100  1903               	skipnz
  1921  0101  0AF5               	incf	___awdiv@dividend+1,f
  1922  0102                     l1285:
  1923  0102  3001               	movlw	1
  1924  0103  00F6               	movwf	??___awdiv
  1925  0104  0876               	movf	??___awdiv,w
  1926  0105  06A1               	xorwf	___awdiv@sign,f
  1927  0106                     l1287:
  1928  0106  01A2               	clrf	___awdiv@quotient
  1929  0107  01A3               	clrf	___awdiv@quotient+1
  1930  0108                     l1289:
  1931  0108  0872               	movf	___awdiv@divisor,w
  1932  0109  0473               	iorwf	___awdiv@divisor+1,w
  1933  010A  1903               	btfsc	3,2
  1934  010B  290D               	goto	u431
  1935  010C  290E               	goto	u430
  1936  010D                     u431:
  1937  010D  2945               	goto	l1309
  1938  010E                     u430:
  1939  010E                     l1291:
  1940  010E  01A0               	clrf	___awdiv@counter
  1941  010F  0AA0               	incf	___awdiv@counter,f
  1942  0110  291C               	goto	l1297
  1943  0111                     l1293:
  1944  0111  3001               	movlw	1
  1945  0112                     u445:
  1946  0112  1003               	clrc
  1947  0113  0DF2               	rlf	___awdiv@divisor,f
  1948  0114  0DF3               	rlf	___awdiv@divisor+1,f
  1949  0115  3EFF               	addlw	-1
  1950  0116  1D03               	skipz
  1951  0117  2912               	goto	u445
  1952  0118                     l1295:
  1953  0118  3001               	movlw	1
  1954  0119  00F6               	movwf	??___awdiv
  1955  011A  0876               	movf	??___awdiv,w
  1956  011B  07A0               	addwf	___awdiv@counter,f
  1957  011C                     l1297:
  1958  011C  1FF3               	btfss	___awdiv@divisor+1,7
  1959  011D  291F               	goto	u451
  1960  011E  2920               	goto	u450
  1961  011F                     u451:
  1962  011F  2911               	goto	l1293
  1963  0120                     u450:
  1964  0120                     l1299:
  1965  0120  3001               	movlw	1
  1966  0121                     u465:
  1967  0121  1003               	clrc
  1968  0122  0DA2               	rlf	___awdiv@quotient,f
  1969  0123  0DA3               	rlf	___awdiv@quotient+1,f
  1970  0124  3EFF               	addlw	-1
  1971  0125  1D03               	skipz
  1972  0126  2921               	goto	u465
  1973  0127  0873               	movf	___awdiv@divisor+1,w
  1974  0128  0275               	subwf	___awdiv@dividend+1,w
  1975  0129  1D03               	skipz
  1976  012A  292D               	goto	u475
  1977  012B  0872               	movf	___awdiv@divisor,w
  1978  012C  0274               	subwf	___awdiv@dividend,w
  1979  012D                     u475:
  1980  012D  1C03               	skipc
  1981  012E  2930               	goto	u471
  1982  012F  2931               	goto	u470
  1983  0130                     u471:
  1984  0130  2938               	goto	l1305
  1985  0131                     u470:
  1986  0131                     l1301:
  1987  0131  0872               	movf	___awdiv@divisor,w
  1988  0132  02F4               	subwf	___awdiv@dividend,f
  1989  0133  0873               	movf	___awdiv@divisor+1,w
  1990  0134  1C03               	skipc
  1991  0135  03F5               	decf	___awdiv@dividend+1,f
  1992  0136  02F5               	subwf	___awdiv@dividend+1,f
  1993  0137                     l1303:
  1994  0137  1422               	bsf	___awdiv@quotient,0
  1995  0138                     l1305:
  1996  0138  3001               	movlw	1
  1997  0139                     u485:
  1998  0139  1003               	clrc
  1999  013A  0CF3               	rrf	___awdiv@divisor+1,f
  2000  013B  0CF2               	rrf	___awdiv@divisor,f
  2001  013C  3EFF               	addlw	-1
  2002  013D  1D03               	skipz
  2003  013E  2939               	goto	u485
  2004  013F                     l1307:
  2005  013F  3001               	movlw	1
  2006  0140  02A0               	subwf	___awdiv@counter,f
  2007  0141  1D03               	btfss	3,2
  2008  0142  2944               	goto	u491
  2009  0143  2945               	goto	u490
  2010  0144                     u491:
  2011  0144  2920               	goto	l1299
  2012  0145                     u490:
  2013  0145                     l1309:
  2014  0145  0821               	movf	___awdiv@sign,w
  2015  0146  1903               	btfsc	3,2
  2016  0147  2949               	goto	u501
  2017  0148  294A               	goto	u500
  2018  0149                     u501:
  2019  0149  294F               	goto	l1313
  2020  014A                     u500:
  2021  014A                     l1311:
  2022  014A  09A2               	comf	___awdiv@quotient,f
  2023  014B  09A3               	comf	___awdiv@quotient+1,f
  2024  014C  0AA2               	incf	___awdiv@quotient,f
  2025  014D  1903               	skipnz
  2026  014E  0AA3               	incf	___awdiv@quotient+1,f
  2027  014F                     l1313:
  2028  014F  0823               	movf	___awdiv@quotient+1,w
  2029  0150  00F3               	movwf	?___awdiv+1
  2030  0151  0822               	movf	___awdiv@quotient,w
  2031  0152  00F2               	movwf	?___awdiv
  2032  0153                     l414:
  2033  0153  0008               	return
  2034  0154                     __end_of___awdiv:
  2035                           
  2036                           	psect	text12
  2037  030E                     __ptext12:	
  2038 ;; *************** function _isr *****************
  2039 ;; Defined at:
  2040 ;;		line 154 in file "master_main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		None
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2054 ;;      Params:         0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0
  2056 ;;      Temps:          2       0       0       0       0
  2057 ;;      Totals:         2       0       0       0       0
  2058 ;;Total ram usage:        2 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		Interrupt level 1
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function _isr
  2069  030E                     _isr:
  2070  030E                     i1l981:
  2071                           
  2072                           ;master_main.c: 155:     (INTCONbits.GIE = 0);
  2073  030E  138B               	bcf	11,7	;volatile
  2074                           
  2075                           ;master_main.c: 156:     (INTCONbits.GIE = 1);
  2076  030F  178B               	bsf	11,7	;volatile
  2077  0310                     i1l73:
  2078  0310  0871               	movf	??_isr+1,w
  2079  0311  008A               	movwf	10
  2080  0312  0E70               	swapf	??_isr,w
  2081  0313  0083               	movwf	3
  2082  0314  0EFE               	swapf	btemp,f
  2083  0315  0E7E               	swapf	btemp,w
  2084  0316  0009               	retfie
  2085  0317                     __end_of_isr:
  2086  007E                     btemp	set	126	;btemp
  2087  007E                     wtemp0	set	126
  2088                           
  2089                           	psect	intentry
  2090  0004                     __pintentry:	
  2091                           ;incstack = 0
  2092                           ; Regs used in _isr: []
  2093                           
  2094  0004                     interrupt_function:
  2095  007E                     saved_w	set	btemp
  2096  0004  00FE               	movwf	btemp
  2097  0005  0E03               	swapf	3,w
  2098  0006  00F0               	movwf	??_isr
  2099  0007  080A               	movf	10,w
  2100  0008  00F1               	movwf	??_isr+1
  2101  0009  120A  118A  2B0E   	ljmp	_isr
  2102                           
  2103                           	psect	config
  2104                           
  2105                           ;Config register CONFIG1 @ 0x2007
  2106                           ;	Oscillator Selection bits
  2107                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2108                           ;	Watchdog Timer Enable bit
  2109                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2110                           ;	Power-up Timer Enable bit
  2111                           ;	PWRTE = OFF, PWRT disabled
  2112                           ;	RE3/MCLR pin function select bit
  2113                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2114                           ;	Code Protection bit
  2115                           ;	CP = OFF, Program memory code protection is disabled
  2116                           ;	Data Code Protection bit
  2117                           ;	CPD = OFF, Data memory code protection is disabled
  2118                           ;	Brown Out Reset Selection bits
  2119                           ;	BOREN = OFF, BOR disabled
  2120                           ;	Internal External Switchover bit
  2121                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2122                           ;	Fail-Safe Clock Monitor Enabled bit
  2123                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2124                           ;	Low Voltage Programming Enable bit
  2125                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2126                           ;	In-Circuit Debugger Mode bit
  2127                           ;	DEBUG = 0x1, unprogrammed default
  2128  2007                     	org	8199
  2129  2007  20D4               	dw	8404
  2130                           
  2131                           ;Config register CONFIG2 @ 0x2008
  2132                           ;	Brown-out Reset Selection bit
  2133                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2134                           ;	Flash Program Memory Self Write Enable bits
  2135                           ;	WRT = OFF, Write protection off
  2136  2008                     	org	8200
  2137  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      12
    BANK0            80     10      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 4
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[4]), 
		 -> STR_6(CODE[2]), STR_5(CODE[4]), STR_4(CODE[2]), STR_3(CODE[4]), 
		 -> STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Decimal
    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _Decimal->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Decimal
    _Decimal->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2853
                                              7 BANK0      3     3      0
                            _Decimal
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     620
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Decimal                                              5     5      0    1316
                                              7 COMMON     2     2      0
                                              4 BANK0      3     3      0
                            ___awdiv
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     316
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Decimal
     ___awdiv
     ___bmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 23 22:07:59 2021

                        pc 0002             ___bmul@product 0074                         l65 0027  
                       l90 031C                         l76 01BA                         l93 02D3  
                       l79 02B9                         l96 030D               ___awdiv@sign 0021  
                       fsr 0004                        l102 0212                        l105 0259  
                      l114 0282                        l108 029F                        l414 0153  
                      l287 0300                        l851 02A6                        l861 02B5  
                      l853 02AE                        l863 02B6                        l855 02B0  
                      l865 02B7                        l857 02B1                        l849 02A0  
                      l867 02B8                        l859 02B2                        _GIE 005F  
                      _RE0 0048                        _RE1 0049                        u400 02FF  
                      u401 02FE                        u410 00F2                        u411 00F1  
                      u500 014A                        u420 00FD                        u501 0149  
                      u421 00FC                        u430 010E                        u510 01C3  
                      u431 010D                        u511 01C2                        u450 0120  
                      u530 01EE                        u451 011F                        u531 01ED  
                      u445 0112                        u525 01CB                        u470 0131  
                      u390 02F2                        u550 0282                        u471 0130  
                      u391 02F1                        u607 0238                        u551 0281  
                      u465 0121                        u617 02CB                        u545 01F6  
                      u490 0145                        u491 0144                        u475 012D  
                      u485 0139                        u567 00E0                        u577 029A  
                      u587 021D                        u597 022C                        _isr 030E  
                      fsr0 0004                       l1301 0131                       l1311 014A  
                     l1303 0137                       l1313 014F                       l1305 0138  
                     l1321 0222                       l1241 028F                       l1401 008A  
                     l1307 013F                       l1235 0318                       l1251 02BE  
                     l1323 0230                       l1331 01C3                       l1243 0295  
                     l1411 00AE                       l1403 0090                       l1309 0145  
                     l1261 02EE                       l1253 02C4                       l1325 0236  
                     l1317 0213                       l1341 01EE                       l1333 01D4  
                     l1245 0298                       l1237 0284                       l1421 00D2  
                     l1413 00B4                       l1405 0096                       l1263 02F2  
                     l1255 02C7                       l1327 0301                       l1319 0219  
                     l1343 01FF                       l1335 01D9                       l1247 029C  
                     l1239 028C                       l1351 0260                       l1423 00D8  
                     l1415 00C0                       l1407 00A2                       l1281 00F9  
                     l1273 00EB                       l1265 02F6                       l1361 0171  
                     l1257 02D0                       l1249 02BB                       l1345 0204  
                     l1337 01DF                       l1329 01BE                       l1353 026D  
                     l1417 00C6                       l1409 00A8                       l1291 010E  
                     l1283 00FD                       l1275 00EE                       l1267 02F8  
                     l1259 02ED                       l1371 01B5                       l1363 0181  
                     l1347 020A                       l1339 01E8                       l1355 0275  
                     l1419 00CC                       l1293 0111                       l1285 0102  
                     l1277 00F2                       l1269 02FF                       l1365 0197  
                     l1357 0155                       l1349 025D                       l1381 0046  
                     l1373 001D                       l1295 0118                       l1287 0106  
                     l1279 00F7                       l1367 01AB                       l1359 015B  
                     l1391 0066                       l1383 004C                       l1375 0034  
                     l1297 011C                       l1289 0108                       l1369 01B0  
                     l1393 006C                       l1385 0052                       l1377 003A  
                     l1299 0120                       l1395 0072                       l1387 0058  
                     l1379 0040                       l1397 0078                       l1389 005E  
                     l1399 0084                       ?_isr 0070                       STR_1 02E2  
                     STR_2 02EA                       STR_3 02E6                       STR_4 02EA  
                     STR_5 02DA                       STR_6 02EA                       STR_7 02DE  
                     STR_8 02EA                       STR_9 02EA                       _PEIE 005E  
                     i1l73 0310          ?_Lcd_Write_String 0070                       _main 001D  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0077  
          __end_of_Decimal 01BB            __end_of_Lcd_Cmd 02D4          ___bmul@multiplier 0075  
           _Segundo_digito 007A                      ??_isr 0070                      ?_main 0070  
          __end_of___awdiv 0154                      STR_10 02EA                      _ANSEL 0188  
          ___awdiv@divisor 0072                      i1l981 030E            ___awdiv@counter 0020  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _setup 02A0                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 025A  
         __end_of_Lcd_Port 031D            __initialization 000F               __end_of_main 00EB  
                   ??_main 0027         __size_of_Lcd_Clear 000D           ___awdiv@dividend 0074  
                   ?_setup 0070                     _ANSELH 0189                  ??_Decimal 0024  
                ??_Lcd_Cmd 0073    __size_of_Lcd_Write_Char 001D                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                     ___bmul 02EC                  ??___awdiv 0076  
         ___awdiv@quotient 0022                     _slave1 002E                     _slave2 002D  
                   saved_w 007E            Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076  
          Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021    __end_of__initialization 0019  
        __end_of_Lcd_Clear 030E        ___bmul@multiplicand 0072             __pcstackCOMMON 0070  
            __end_of_setup 02BA             _Lcd_Set_Cursor 01BB                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                    ??_setup 0072                 __pbssBANK0 002A  
               __pmaintext 001D                    ?___bmul 0072                 __pintentry 0004  
__size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0213                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 02D4                    _Decimal 0154             _Lcd_Write_Char 0283  
                  _Lcd_Cmd 02BA            __size_of___bmul 0015                    ___awdiv 00EB  
          ?_Lcd_Set_Cursor 0076                    __ptext1 02A0                    __ptext2 025A  
                  __ptext3 0283                    __ptext4 01BB                    __ptext5 0213  
                  __ptext6 0301                    __ptext7 02BA                    __ptext8 0317  
                  __ptext9 0154               __size_of_isr 0009                    _sensor1 002C  
                  _sensor2 002B                    _sensor3 002A     __end_of_Lcd_Write_Char 02A0  
     end_of_initialization 0019               Decimal@valor 0078                  Lcd_Port@a 0072  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0022  
        Lcd_Write_String@i 0020                  _Lcd_Clear 0301             __end_of___bmul 0301  
         _Lcd_Write_String 025A        start_initialization 000F                __end_of_isr 0317  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070  
                 ??___bmul 0073            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0076  
            _Tercer_digito 0079                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Decimal 0070                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0077                   ?___awdiv 0072                  __pstrings 02D4  
          Decimal@variable 0077             __size_of_setup 001A          interrupt_function 0004  
            _Primer_digito 007B                   Lcd_Cmd@a 0075                ??_Lcd_Clear 0076  
              __stringbase 02D9           ??_Lcd_Write_Char 0073                   _Lcd_Init 0213  
                 _Lcd_Port 0317   __end_of_Lcd_Write_String 0283           __size_of_Decimal 0067  
         __size_of_Lcd_Cmd 001A           __size_of___awdiv 0069         __end_of__stringtab 02DA  
                 __ptext10 02EC                   __ptext11 00EB                   __ptext12 030E  
            __size_of_main 00CE                 _INTCONbits 000B         Lcd_Write_Char@temp 0075  
                 intlevel1 0000                  stringcode 02D4                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 0023                   stringdir 02D4                   stringtab 02D4  
              _SSPCON2bits 0091  
